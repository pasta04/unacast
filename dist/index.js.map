{"version":3,"file":"index.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/main/ReadIcons.ts","webpack:///./src/main/bouyomi-chan/index.ts","webpack:///./src/main/const.ts","webpack:///./src/main/getRes.ts","webpack:///./src/main/jpnkn/index.ts","webpack:///./src/main/main.ts","webpack:///./src/main/niconama/index.ts","webpack:///./src/main/readBBS/Read5ch.ts","webpack:///./src/main/readBBS/readSitaraba.ts","webpack:///./src/main/startServer.ts","webpack:///./src/main/util.ts","webpack:///./src/main/youtube-chat/index.ts","webpack:///./src/main/youtube-chat/live-chat.ts","webpack:///./src/main/youtube-chat/parser.ts"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main/main.ts\");\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * アイコン表示に関するモジュール\n * シングルトン\n */\nvar fs_1 = __importDefault(require(\"fs\"));\nvar path_1 = __importDefault(require(\"path\"));\nvar electron_log_1 = __importDefault(require(\"electron-log\"));\nvar log = electron_log_1.default.scope('ReadIcons');\nvar randomIconList;\nvar idIconList;\n/**\n * コンストラクタ\n * ・ランダムフォルダからアイコン名を取得してリスト化\n * ・IDフォルダからもリスト化、空の対応マップ作製\n * ・コテハン対応ファイルを読みこんでmapに格納\n */\nvar ReadIcons = /** @class */ (function () {\n    function ReadIcons() {\n        /**\n         * アイコンランダム表示機能（デフォルト）\n         * 起動時に作成したアイコンリストからランダムで1つ取得\n         */\n        this.getRandomIcons = function () {\n            var iconPath = '';\n            try {\n                var dirName = './img/random/';\n                // リストからランダム取得\n                //  const size = randomIconList.size;\n                var num = Math.floor(randomIconList.length * Math.random());\n                iconPath = dirName + randomIconList[num];\n            }\n            catch (e) {\n                log.error(e);\n            }\n            return iconPath;\n        };\n        //画像ディレクトリ\n        var randomDir = path_1.default.resolve(__dirname, \"../public/img/random/\");\n        log.debug('loadRandomDir = ' + randomDir);\n        //  ランダムアイコン取得\n        randomIconList = readDir(randomDir);\n        // ID用アイコンディレクトリ(未使用)\n        var idDir = path_1.default.resolve(__dirname, \"../public/img/id/\");\n        log.debug('loadIDDir = ' + idDir);\n        //  ランダムアイコン取得\n        idIconList = readDir(idDir);\n    }\n    return ReadIcons;\n}());\nvar readDir = function (imgDir) {\n    var iconFileList = [];\n    //  指定したディレクトリのアイコン取得\n    var files = fs_1.default.readdirSync(imgDir, { withFileTypes: true });\n    //pngファイルのみ返却リストに格納する\n    files.forEach(function (file) {\n        // asar圧縮するとfileが文字列になる。開発環境だとfileオブジェクトになる\n        var target = typeof file.name !== 'string' ? file : file.name;\n        var regx = /.*\\.png$/.test(target);\n        if (regx) {\n            iconFileList.push(target);\n        }\n    });\n    return iconFileList;\n};\nexports.default = new ReadIcons();\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar net_1 = __importDefault(require(\"net\"));\nvar BouyomiChan = /** @class */ (function () {\n    function BouyomiChan(options) {\n        /**\n         * 棒読みちゃんのホスト\n         */\n        this.host = 'localhost';\n        /**\n         * 棒読みちゃんのポート番号\n         */\n        this.port = 50001;\n        /**\n         * 速度（-1:棒読みちゃん画面上の設定）\n         */\n        this.speed = -1;\n        /**\n         * 音程（-1:棒読みちゃん画面上の設定）\n         */\n        this.tone = -1;\n        /**\n         * 音量（-1:棒読みちゃん画面上の設定）\n         */\n        this.volume = -1;\n        /**\n         * 声質（ 0:棒読みちゃん画面上の設定、1:女性1、2:女性2、3:男性1、4:男性2、5:中性、6:ロボット、7:機械1、8:機械2、10001～:SAPI5）\n         */\n        this.type = 0;\n        /**\n         * 読み上げの際先頭に付加する文字列\n         */\n        this.prefix = '';\n        if (!options)\n            return;\n        if (options.host)\n            this.host = options.host;\n        if (options.port)\n            this.port = options.port;\n        if (options.speed)\n            this.speed = options.speed;\n        if (options.tone)\n            this.tone = options.tone;\n        if (options.volume)\n            this.volume = options.volume;\n        if (options.type)\n            this.type = options.type;\n        if (options.prefix)\n            this.prefix = options.prefix;\n    }\n    /**\n     * @param message 棒読みちゃんに読み上げてもらう文章\n     */\n    BouyomiChan.prototype.speak = function (message) {\n        /** 読み前に文字列を処理する */\n        var concatMessage = this.prefix.concat(message);\n        /** 棒読みちゃんに送信する設定のバイト長 */\n        var SETTINGS_BYTES_LENGTH = 15;\n        var messageByteLength = Buffer.byteLength(concatMessage);\n        var bufferLength = SETTINGS_BYTES_LENGTH + messageByteLength;\n        var buff = Buffer.alloc(bufferLength);\n        /** メッセージ読み上げコマンド */\n        var COMMAND_TO_SPEAK = 1;\n        var len = buff.writeUInt16LE(COMMAND_TO_SPEAK);\n        len = buff.writeInt16LE(this.speed, len);\n        len = buff.writeInt16LE(this.tone, len);\n        len = buff.writeInt16LE(this.volume, len);\n        len = buff.writeUInt16LE(this.type, len);\n        /** 文字コード(0:UTF-8, 1:Unicode, 2:Shift-JIS) */\n        var ENCODING = 0;\n        len = buff.writeUInt8(ENCODING, len);\n        len = buff.writeUInt32LE(messageByteLength, len);\n        len = buff.write(concatMessage, len);\n        var client = net_1.default.createConnection(this.port, this.host);\n        client.write(buff);\n        client.end();\n    };\n    return BouyomiChan;\n}());\nexports.default = BouyomiChan;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.electronEvent = void 0;\nexports.electronEvent = {\n    /** サーバー起動 */\n    START_SERVER: 'start-server',\n    /** サーバー停止 */\n    STOP_SERVER: 'stop-server',\n    /** Config適用 */\n    APPLY_CONFIG: 'apply-config',\n    /** アラート表示 */\n    SHOW_ALERT: 'show-alert',\n    SAVE_CONFIG: 'save-config',\n    /** 棒読み再生 */\n    PLAY_TAMIYASU: 'play-tamiyasu',\n    /** レス着信音再生 */\n    PLAY_SOUND_START: 'play-sound-start',\n    PLAY_SOUND_END: 'play-sound-end',\n    WAIT_YOMIKO_TIME: 'wait-yomiko-time',\n    SPEAKING_END: 'speaking-end',\n    /** コメント表示 */\n    SHOW_COMMENT: 'show-comment',\n    /** コメント欄初期化 */\n    CLEAR_COMMENT: 'clear-comment',\n    /** 翻訳コメント表示 */\n    SHOW_COMMENT_TL: 'show_comment_translate',\n    /** サーバー起動の返信 */\n    START_SERVER_REPLY: 'start-server-reply',\n    /** 強制的に端にスクロール */\n    FORCE_SCROLL: 'FORCE_SCROLL',\n    /** ステータス更新 */\n    UPDATE_STATUS: 'UPDATE_STATUS',\n    /** コメントテスト */\n    COMMENT_TEST: 'COMMENT_TEST',\n    /** 画像プレビュー */\n    PREVIEW_IMAGE: 'PREVIEW_IMAGE',\n};\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.threadUrlToBoardInfo = exports.postResponse = exports.getThreadList = exports.getRes = void 0;\nvar axios_1 = __importDefault(require(\"axios\"));\nvar iconv_lite_1 = __importDefault(require(\"iconv-lite\")); // 文字コード変換用パッケージ\nvar express_1 = __importDefault(require(\"express\"));\nvar body_parser_1 = __importDefault(require(\"body-parser\")); // jsonパーサ\nvar router = express_1.default.Router();\nvar electron_log_1 = __importDefault(require(\"electron-log\"));\nvar log = electron_log_1.default.scope('bbs');\nvar ReadIcons_1 = __importDefault(require(\"./ReadIcons\")); //アイコンファイル名取得\nvar startServer_1 = require(\"./startServer\");\nvar util_1 = require(\"./util\");\nvar readSitaraba_1 = __importStar(require(\"./readBBS/readSitaraba\")); // したらば読み込み用モジュール\nvar Read5ch_1 = __importStar(require(\"./readBBS/Read5ch\")); // 5ch互換板読み込み用モジュール\nvar sitaraba = new readSitaraba_1.default();\nvar read5ch = new Read5ch_1.default();\n// 掲示板読み込みモジュール、一度決定したら使いまわすためにグローバル宣言\nvar bbsModule = null;\n// リクエストのbodyをパース下りエンコードしたりするためのやつ\nrouter.use(body_parser_1.default.urlencoded({ extended: true }));\nrouter.use(body_parser_1.default.json());\n/**\n * ブラウザからの初期処理リクエスト\n */\nrouter.get('/', function (req, res, next) { return __awaiter(void 0, void 0, void 0, function () {\n    var threadUrl, resNum, result, doms;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                log.info('access /');\n                threadUrl = globalThis.config.url;\n                resNum = globalThis.config.resNumber ? Number(globalThis.config.resNumber) : NaN;\n                log.info(\"threadUrl=\" + threadUrl + \" resNum=\" + resNum);\n                if (!resNum) {\n                    res.send(JSON.stringify([]));\n                    return [2 /*return*/];\n                }\n                res.header('Content-Type', 'application/json; charset=UTF-8');\n                return [4 /*yield*/, exports.getRes(threadUrl, resNum)];\n            case 1:\n                result = _a.sent();\n                result = result.filter(function (item) { return item.from !== 'system'; });\n                doms = util_1.judgeAaMessage(result).map(function (item) { return startServer_1.createDom(item, 'server', item.isAA); });\n                res.send(JSON.stringify(doms));\n                return [2 /*return*/];\n        }\n    });\n}); });\n/**\n * 掲示板のレスを取得する\n * @param threadUrl スレのURL\n * @param resNum この番号以降を取得する。指定しない場合は全件取得\n */\nvar getRes = function (threadUrl, resNum) { return __awaiter(void 0, void 0, void 0, function () {\n    var response, e_1;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                _a.trys.push([0, 2, , 3]);\n                // リクエストURLを解析し、使用するモジュールを変更する\n                bbsModule = analysBBSName(threadUrl);\n                return [4 /*yield*/, bbsModule.read(threadUrl, resNum)];\n            case 1:\n                response = _a.sent();\n                globalThis.electron.threadConnectionError = 0;\n                log.info(\"fetch \" + threadUrl + \" resNum = \" + resNum + \", result = \" + response.length + \" lastResNum=\" + (response.length > 0 ? response[response.length - 1].number : '-'));\n                return [2 /*return*/, response.map(function (res) {\n                        return __assign(__assign({}, res), { imgUrl: ReadIcons_1.default.getRandomIcons() });\n                    })];\n            case 2:\n                e_1 = _a.sent();\n                log.error(e_1);\n                // エラー回数が規定回数以上かチェックして、超えてたら通知する\n                if (globalThis.config.notifyThreadConnectionErrorLimit > 0) {\n                    globalThis.electron.threadConnectionError += 1;\n                    if (globalThis.electron.threadConnectionError >= globalThis.config.notifyThreadConnectionErrorLimit) {\n                        log.info('エラー回数超過');\n                        globalThis.electron.threadConnectionError = 0;\n                        return [2 /*return*/, [\n                                {\n                                    name: 'unacastより',\n                                    imgUrl: './img/unacast.png',\n                                    text: '掲示板が規定回数通信エラーになりました。設定を見直すか、掲示板URLを変更してください。',\n                                    from: 'system',\n                                },\n                            ]];\n                    }\n                }\n                return [2 /*return*/, []];\n            case 3: return [2 /*return*/];\n        }\n    });\n}); };\nexports.getRes = getRes;\n/*\n * URLをみてどこのBBSか判定して使用するモジュールを返却する\n */\nvar analysBBSName = function (threadUrl) {\n    // したらばドメイン名\n    var sitarabaDomain = 'jbbs.shitaraba.net';\n    if (threadUrl.indexOf(sitarabaDomain) !== -1) {\n        // URLにしたらばドメイン名が入ってればしたらば\n        return sitaraba;\n    }\n    // どこにも該当しなかったらとりあえず5chで\n    // この辺も対応ドメインリストとか作ってちゃんと判定したほうがよさそう\n    return read5ch;\n};\nvar getThreadList = function (boardUrl) { return __awaiter(void 0, void 0, void 0, function () {\n    var sitarabaDomain;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                sitarabaDomain = 'jbbs.shitaraba.net';\n                if (!(boardUrl.indexOf(sitarabaDomain) !== -1)) return [3 /*break*/, 2];\n                return [4 /*yield*/, readSitaraba_1.readBoard(boardUrl)];\n            case 1: \n            // URLにしたらばドメイン名が入ってればしたらば\n            //\n            return [2 /*return*/, _a.sent()];\n            case 2: return [4 /*yield*/, Read5ch_1.readBoard(boardUrl)];\n            case 3: return [2 /*return*/, _a.sent()];\n        }\n    });\n}); };\nexports.getThreadList = getThreadList;\n/** レスを投稿 */\nvar postResponse = function (hostname, threadNumber, boardId, message) { return __awaiter(void 0, void 0, void 0, function () {\n    var sitarabaDomain;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                log.info(\"[postResponse] \" + hostname + \" \" + threadNumber + \" \" + boardId);\n                sitarabaDomain = 'jbbs.shitaraba.net';\n                if (!(hostname.indexOf(sitarabaDomain) !== -1)) return [3 /*break*/, 2];\n                return [4 /*yield*/, readSitaraba_1.postRes(hostname, threadNumber, boardId, message)];\n            case 1: \n            // URLにしたらばドメイン名が入ってればしたらば\n            return [2 /*return*/, _a.sent()];\n            case 2: return [4 /*yield*/, Read5ch_1.postRes(hostname, threadNumber, boardId, message)];\n            case 3: return [2 /*return*/, _a.sent()];\n        }\n    });\n}); };\nexports.postResponse = postResponse;\n/**\n * スレのURLから板情報を取得\n * @param threadUrl スレのURL\n */\nvar threadUrlToBoardInfo = function (threadUrl) { return __awaiter(void 0, void 0, void 0, function () {\n    var sitarabaDomain, result, boardUrl, tempUrl, encoding, options, response, str, e_2;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                sitarabaDomain = 'jbbs.shitaraba.net';\n                result = {\n                    status: 'ng',\n                    boardUrl: threadUrl,\n                    boardName: '★取得失敗★',\n                };\n                boardUrl = '';\n                tempUrl = threadUrl;\n                tempUrl = tempUrl.replace(/\\/l\\d+$/, '/');\n                if (!tempUrl.match(/.*\\/$/)) {\n                    tempUrl += '/';\n                }\n                encoding = '';\n                if (tempUrl.indexOf(sitarabaDomain) !== -1) {\n                    // スレ: https://jbbs.shitaraba.net/bbs/read.cgi/game/51638/1581839266/\n                    // 板: https://jbbs.shitaraba.net/game/51638/\n                    // 設定: https://jbbs.shitaraba.net/bbs/api/setting.cgi/game/51638/\n                    encoding = 'EUC-JP';\n                    // 板かスレか判定\n                    if (tempUrl.match('read.cgi')) {\n                        // スレ\n                        tempUrl = tempUrl.replace('jbbs.shitaraba.net/bbs/read.cgi/', '').replace(/https?:\\/\\//, '');\n                        tempUrl = tempUrl.match(/(.+)\\/.+\\/$/)[1] + '/';\n                        boardUrl = \"http://jbbs.shitaraba.net/\" + tempUrl;\n                        tempUrl = \"http://jbbs.shitaraba.net/bbs/api/setting.cgi/\" + tempUrl;\n                    }\n                    else {\n                        // 板\n                        boardUrl = tempUrl;\n                        tempUrl = tempUrl.replace('jbbs.shitaraba.net/', '').replace(/https?:\\/\\//, '');\n                        tempUrl = \"http://jbbs.shitaraba.net/bbs/api/setting.cgi/\" + tempUrl;\n                    }\n                }\n                else {\n                    // スレ: https://bbs.jpnkn.com/test/read.cgi/pasta04/1586794623/\n                    // 板: https://bbs.jpnkn.com/pasta04/\n                    // 設定: https://bbs.jpnkn.com/pasta04/SETTING.TXT\n                    encoding = 'SHIFT-JIS';\n                    // 板かスレか判定\n                    if (tempUrl.match(/test\\/read.cgi\\/.+\\/.+\\//)) {\n                        // スレ\n                        tempUrl = tempUrl.replace('test/read.cgi/', '').match(/(.+)\\/.+\\/$/)[1] + \"/\";\n                        boardUrl = tempUrl;\n                        tempUrl = tempUrl + \"SETTING.TXT\";\n                    }\n                    else {\n                        // 板\n                        boardUrl = tempUrl;\n                        tempUrl = tempUrl + \"SETTING.TXT\";\n                    }\n                }\n                _a.label = 1;\n            case 1:\n                _a.trys.push([1, 3, , 4]);\n                options = {\n                    url: tempUrl,\n                    method: 'GET',\n                    timeout: 3 * 1000,\n                    responseType: 'arraybuffer',\n                };\n                return [4 /*yield*/, axios_1.default(options)];\n            case 2:\n                response = _a.sent();\n                if (response.status < 400) {\n                    str = iconv_lite_1.default.decode(Buffer.from(response.data), encoding);\n                    str.split(/\\n/g).map(function (text) {\n                        var matched = text.match(/BBS_TITLE=(.+)/);\n                        if (matched) {\n                            result.boardName = matched[1];\n                            result.boardUrl = boardUrl;\n                            result.status = 'ok';\n                        }\n                    });\n                }\n                return [3 /*break*/, 4];\n            case 3:\n                e_2 = _a.sent();\n                log.error('なんかエラー');\n                return [3 /*break*/, 4];\n            case 4: return [2 /*return*/, result];\n        }\n    });\n}); };\nexports.threadUrlToBoardInfo = threadUrlToBoardInfo;\nexports.default = router;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * jpnkn fast\n */\nvar events_1 = require(\"events\");\nvar paho_mqtt_1 = __importDefault(require(\"paho-mqtt\"));\nvar electron_log_1 = __importDefault(require(\"electron-log\"));\nvar log = electron_log_1.default.scope('jpnkn');\nvar ReadIcons_1 = __importDefault(require(\"../ReadIcons\")); //アイコンファイル名取得\nvar ws_1 = __importDefault(require(\"ws\"));\nglobal.WebSocket = ws_1.default;\nvar JpnknFast = /** @class */ (function (_super) {\n    __extends(JpnknFast, _super);\n    function JpnknFast(boardId) {\n        var _this = _super.call(this) || this;\n        /** コメント取得のWebSocket */\n        // commentSocket: mqtt.Client = null as any;\n        _this.commentSocket = null;\n        /** WebSocketに対する定期ping */\n        _this.commentPingIntervalObj = null;\n        _this.fetchComment = function () { return __awaiter(_this, void 0, void 0, function () {\n            var client, onConnect, onConnectionLost, onMessageArrived;\n            var _this = this;\n            return __generator(this, function (_a) {\n                log.info(\"[fetchComment] boardId = \" + this.boardId);\n                client = new paho_mqtt_1.default.Client('a.mq.jpnkn.com', 9091, 'peca' + new Date().getTime());\n                onConnect = function (o) {\n                    client.subscribe(\"bbs/\" + _this.boardId);\n                    _this.emit('open');\n                };\n                onConnectionLost = function (e) {\n                    log.error('[fetchComment] なんかエラーだ');\n                    log.error(JSON.stringify(e, null, '  '));\n                    _this.emit('error', new Error(\"jpnkn\\u306EWebSocket\\u3067Error: [\" + e.errorCode + \"] \" + e.errorMessage));\n                    _this.fetchComment();\n                };\n                onMessageArrived = function (e) {\n                    var response = JSON.parse(e.payloadString);\n                    var res = response.body.split('<>');\n                    var item = {\n                        number: response.no,\n                        name: res[0],\n                        date: res[2],\n                        text: res[3],\n                        imgUrl: ReadIcons_1.default.getRandomIcons(),\n                        threadTitle: '',\n                        id: '',\n                        email: res[1],\n                        from: 'jpnkn',\n                    };\n                    _this.emit('comment', item);\n                };\n                client.connect({ userName: 'genkai', password: '7144', onSuccess: onConnect, useSSL: true });\n                client.onConnectionLost = onConnectionLost;\n                client.onMessageArrived = onMessageArrived;\n                // // 定期的にping打つ\n                // this.commentPingIntervalObj = setInterval(() => {\n                //   if (ws.OPEN) {\n                //     ws.ping();\n                //   } else {\n                //     clearInterval(this.commentPingIntervalObj);\n                //   }\n                // }, 30 * 1000);\n                this.commentSocket = client;\n                return [2 /*return*/];\n            });\n        }); };\n        /** コメント取得の停止 */\n        _this.stop = function () {\n            if (_this.commentPingIntervalObj) {\n                clearInterval(_this.commentPingIntervalObj);\n                _this.commentPingIntervalObj = null;\n            }\n            if (_this.commentSocket && _this.commentSocket.isConnected())\n                _this.commentSocket.disconnect();\n            // if (this.commentSocket && this.commentSocket.connected) this.commentSocket.end();\n            _this.emit('end');\n        };\n        if (!boardId)\n            throw TypeError('Required channelId.');\n        _this.boardId = boardId;\n        return _this;\n    }\n    JpnknFast.prototype.start = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (this.boardId) {\n                    this.emit('start');\n                    this.fetchComment();\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    JpnknFast.prototype.on = function (event, listener) {\n        return _super.prototype.on.call(this, event, listener);\n    };\n    return JpnknFast;\n}(events_1.EventEmitter));\nexports.default = JpnknFast;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Electronのモジュール\nvar path_1 = __importDefault(require(\"path\"));\nvar electron_1 = __importStar(require(\"electron\"));\nvar electron_log_1 = __importDefault(require(\"electron-log\"));\nvar util_1 = require(\"./util\");\nvar electron_window_state_1 = __importDefault(require(\"electron-window-state\"));\nconsole.trace = function () {\n    //\n};\nprocess.on('uncaughtException', function (err) {\n    electron_log_1.default.error(err);\n});\n// アプリケーションをコントロールするモジュール\nvar app = electron_1.default.app;\n// 多重起動防止\nif (!app.requestSingleInstanceLock()) {\n    electron_log_1.default.error('[app] It is terminated for multiple launches.');\n    app.quit();\n}\nelse {\n    electron_log_1.default.info('[app] started');\n    app.allowRendererProcessReuse = true;\n    var iconPath_1 = path_1.default.resolve(__dirname, '../icon.png');\n    // サーバー起動モジュール\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    var ss = require('./startServer');\n    console.trace(ss);\n    // メインウィンドウはGCされないようにグローバル宣言\n    globalThis.electron = {\n        mainWindow: null,\n        chatWindow: null,\n        translateWindow: null,\n        imagePreviewWindow: null,\n        seList: [],\n        twitchChat: null,\n        youtubeChat: null,\n        niconicoChat: null,\n        jpnknFast: null,\n        threadConnectionError: 0,\n        threadNumber: 0,\n        commentQueueList: [],\n        translateQueueList: [],\n    };\n    globalThis.config = {};\n    // 全てのウィンドウが閉じたら終了\n    // app.on('window-all-closed', () => {\n    //   if (process.platform != 'darwin') {\n    //     app.quit();\n    //   }\n    // });\n    // Electronの初期化完了後に実行\n    app.on('ready', function () {\n        var windowState = electron_window_state_1.default({\n            defaultWidth: 700,\n            defaultHeight: 720,\n            file: 'mainWindow.json',\n        });\n        // ウィンドウサイズを（フレームサイズを含まない）設定\n        var mainWin = new electron_1.default.BrowserWindow({\n            // 前回起動時のを復元\n            x: windowState.x,\n            y: windowState.y,\n            width: windowState.width,\n            height: windowState.height,\n            useContentSize: true,\n            icon: iconPath_1,\n            webPreferences: {\n                nodeIntegration: true,\n            },\n            skipTaskbar: true,\n        });\n        globalThis.electron.mainWindow = mainWin;\n        windowState.manage(mainWin);\n        mainWin.setTitle('unacast');\n        mainWin.setMenu(null);\n        // レンダラーで使用するhtmlファイルを指定する\n        mainWin.loadURL('file://' + path_1.default.resolve(__dirname, '../src/html/index.html'));\n        // ウィンドウが閉じられたらアプリも終了\n        mainWin.on('close', function (event) {\n            // 確認ダイアログではいをクリックしたら閉じる\n            event.preventDefault();\n            electron_1.dialog\n                .showMessageBox(mainWin, {\n                type: 'question',\n                buttons: ['Yes', 'No'],\n                // title: '',\n                message: '終了しますか？',\n            })\n                .then(function (value) {\n                if (value.response === 0) {\n                    app.exit();\n                }\n            });\n        });\n        mainWin.on('closed', function () {\n            electron_log_1.default.info('[app] close');\n            app.exit();\n        });\n        // 開発者ツールを開く\n        // mainWin.webContents.openDevTools();\n        // タスクトレイの設定\n        var tray = null;\n        app.whenReady().then(function () {\n            tray = new electron_1.Tray(iconPath_1);\n            var contextMenu = electron_1.Menu.buildFromTemplate([\n                {\n                    label: '設定',\n                    click: function () {\n                        globalThis.electron.mainWindow.focus();\n                    },\n                },\n                {\n                    label: 'コメント',\n                    click: function () {\n                        globalThis.electron.chatWindow.focus();\n                    },\n                },\n                {\n                    label: '翻訳',\n                    click: function () {\n                        globalThis.electron.translateWindow.focus();\n                    },\n                },\n                {\n                    label: '終了',\n                    click: function () {\n                        globalThis.electron.mainWindow.close();\n                    },\n                },\n            ]);\n            tray.setToolTip('∈(ﾟ◎ﾟ)∋ｳﾅｰ');\n            tray.setContextMenu(contextMenu);\n            // タスクトレイクリック時の挙動\n            var isDoubleClicked = false;\n            tray.on('click', function (event) { return __awaiter(void 0, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            isDoubleClicked = false;\n                            return [4 /*yield*/, util_1.sleep(200)];\n                        case 1:\n                            _a.sent();\n                            if (isDoubleClicked)\n                                return [2 /*return*/];\n                            globalThis.electron.chatWindow.focus();\n                            return [2 /*return*/];\n                    }\n                });\n            }); });\n            tray.on('double-click', function (event) {\n                isDoubleClicked = true;\n                globalThis.electron.mainWindow.focus();\n            });\n        });\n        createChatWindow();\n        createTranslateWindow();\n        createImagePreviewWindow();\n    });\n    // 音声再生できるようにする\n    app.commandLine.appendSwitch('--autoplay-policy', 'no-user-gesture-required');\n}\nvar createChatWindow = function () {\n    var windowState = electron_window_state_1.default({\n        defaultWidth: 400,\n        defaultHeight: 720,\n        file: 'chatWindow.json',\n    });\n    var iconPath = path_1.default.resolve(__dirname, '../icon.png');\n    var chatWindow = new electron_1.default.BrowserWindow({\n        x: windowState.x,\n        y: windowState.y,\n        width: windowState.width,\n        height: windowState.height,\n        useContentSize: true,\n        icon: iconPath,\n        webPreferences: {\n            nodeIntegration: true,\n        },\n        // タスクバーに表示しない\n        skipTaskbar: true,\n        // 閉じれなくする\n        closable: false,\n    });\n    windowState.manage(chatWindow);\n    chatWindow.setTitle('unacast');\n    chatWindow.setMenu(null);\n    // レンダラーで使用するhtmlファイルを指定する\n    chatWindow.loadURL('file://' + path_1.default.resolve(__dirname, '../src/html/chat.html'));\n    globalThis.electron.chatWindow = chatWindow;\n    // chatWindow.webContents.openDevTools();\n};\nvar createTranslateWindow = function () {\n    var windowState = electron_window_state_1.default({\n        defaultWidth: 400,\n        defaultHeight: 720,\n        file: 'translateWindow.json',\n    });\n    var iconPath = path_1.default.resolve(__dirname, '../icon.png');\n    var translateWindow = new electron_1.default.BrowserWindow({\n        x: windowState.x,\n        y: windowState.y,\n        width: windowState.width,\n        height: windowState.height,\n        useContentSize: true,\n        icon: iconPath,\n        webPreferences: {\n            nodeIntegration: true,\n        },\n        // タスクバーに表示しない\n        skipTaskbar: true,\n        // 閉じれなくする\n        closable: false,\n    });\n    windowState.manage(translateWindow);\n    translateWindow.setTitle('unacast');\n    translateWindow.setMenu(null);\n    // レンダラーで使用するhtmlファイルを指定する\n    translateWindow.loadURL('file://' + path_1.default.resolve(__dirname, '../src/html/translate.html'));\n    // 初期表示は最小化\n    translateWindow.minimize();\n    globalThis.electron.translateWindow = translateWindow;\n    // translateWindow.webContents.openDevTools();\n};\nvar createImagePreviewWindow = function () {\n    var windowState = electron_window_state_1.default({\n        defaultWidth: 400,\n        defaultHeight: 400,\n        file: 'imagePreview.json',\n    });\n    var iconPath = path_1.default.resolve(__dirname, '../icon.png');\n    var childwindow = new electron_1.default.BrowserWindow({\n        x: windowState.x,\n        y: windowState.y,\n        width: windowState.width,\n        height: windowState.height,\n        useContentSize: true,\n        icon: iconPath,\n        webPreferences: {\n            nodeIntegration: true,\n        },\n        // タスクバーに表示しない\n        skipTaskbar: true,\n        minimizable: false,\n        minHeight: 100,\n        closable: true,\n    });\n    windowState.manage(childwindow);\n    childwindow.setTitle('unacast');\n    childwindow.setMenu(null);\n    childwindow.hide();\n    // レンダラーで使用するhtmlファイルを指定する\n    childwindow.loadURL('file://' + path_1.default.resolve(__dirname, '../src/html/imagePreview.html'));\n    // ×押したらインスタンス再生成\n    childwindow.on('close', function (e) {\n        setTimeout(function () {\n            createImagePreviewWindow();\n        }, 10);\n    });\n    globalThis.electron.imagePreviewWindow = childwindow;\n    // childwindow.webContents.openDevTools();\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * ニコ生コメント\n */\nvar events_1 = require(\"events\");\nvar axios_1 = __importDefault(require(\"axios\"));\nvar cheerio_1 = __importDefault(require(\"cheerio\"));\nvar electron_log_1 = __importDefault(require(\"electron-log\"));\nvar log = electron_log_1.default.scope('niconama');\nvar util_1 = require(\"../util\");\nvar ws_1 = __importDefault(require(\"ws\"));\nvar NiconamaComment = /** @class */ (function (_super) {\n    __extends(NiconamaComment, _super);\n    function NiconamaComment(options) {\n        var _this = _super.call(this) || this;\n        /** 配信開始待ちのインターバル(ms) */\n        _this.waitBroadcastPollingInterval = 5000;\n        /** 初期処理のコメントを受信し終わった */\n        _this.isFirstCommentReceived = false;\n        /** 最新のコメント番号 */\n        _this.latestNo = NaN;\n        /** コメント取得のWebSocket */\n        _this.commentSocket = null;\n        /** ニコ生チャットWebSocketに対する定期ping */\n        _this.commentPingIntervalObj = null;\n        /** ニコ生の配信開始待ち */\n        _this.pollingStartBroadcast = function () { return __awaiter(_this, void 0, void 0, function () {\n            var url, res, $, embeddedData, e_1;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        url = \"https://live.nicovideo.jp/watch/\" + this.communityId;\n                        log.info(\"[pollingStartBroadcast] \" + url);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 6, , 8]);\n                        return [4 /*yield*/, axios_1.default.get(url)];\n                    case 2:\n                        res = _b.sent();\n                        $ = cheerio_1.default.load(res.data);\n                        embeddedData = JSON.parse((_a = $('#embedded-data').attr('data-props')) !== null && _a !== void 0 ? _a : '');\n                        if (!(embeddedData.program.status === 'ENDED' || embeddedData.program.endTime * 1000 < new Date().getTime())) return [3 /*break*/, 4];\n                        return [4 /*yield*/, util_1.sleep(this.waitBroadcastPollingInterval)];\n                    case 3:\n                        _b.sent();\n                        this.pollingStartBroadcast();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        // 始まってる\n                        this.emit('start');\n                        this.fetchCommentServerThread();\n                        _b.label = 5;\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_1 = _b.sent();\n                        this.emit('error', new Error(\"connection error to \" + url));\n                        log.error(JSON.stringify(e_1, null, '  '));\n                        return [4 /*yield*/, util_1.sleep(this.waitBroadcastPollingInterval * 2)];\n                    case 7:\n                        _b.sent();\n                        this.pollingStartBroadcast();\n                        return [3 /*break*/, 8];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        }); };\n        /** ニコ生のコメントを取得 */\n        _this.fetchCommentServerThread = function () { return __awaiter(_this, void 0, void 0, function () {\n            var url, res, $, embeddedData, broadcastId, audienceToken, frontendId, threadWssUrl, tWs;\n            var _this = this;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        log.info(\"[fetchCommentServerThread]\");\n                        url = \"https://live.nicovideo.jp/watch/\" + this.communityId;\n                        return [4 /*yield*/, axios_1.default.get(url)];\n                    case 1:\n                        res = _b.sent();\n                        $ = cheerio_1.default.load(res.data);\n                        embeddedData = JSON.parse((_a = $('#embedded-data').attr('data-props')) !== null && _a !== void 0 ? _a : '');\n                        broadcastId = embeddedData.program.broadcastId || embeddedData.program.reliveProgramId;\n                        audienceToken = embeddedData.player.audienceToken;\n                        frontendId = embeddedData.site.frontendId;\n                        threadWssUrl = \"wss://a.live2.nicovideo.jp/unama/wsapi/v2/watch/\" + broadcastId + \"?audience_token=\" + audienceToken + \"&frontend_id=\" + frontendId;\n                        log.info(threadWssUrl);\n                        tWs = new ws_1.default(threadWssUrl, {\n                            headers: {\n                                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36',\n                            },\n                        });\n                        tWs.onmessage = function (event) {\n                            var obj = JSON.parse(event.data.toString());\n                            // log.info(JSON.stringify(obj, null, '  '));\n                            log.info(\"[fetchCommentServerThread] WS received - type: \" + obj.type);\n                            switch (obj.type) {\n                                case 'serverTime': {\n                                    // currentMs\n                                    break;\n                                }\n                                case 'seat': {\n                                    // keepIntervalSec\n                                    break;\n                                }\n                                case 'stream': {\n                                    // hlsのURLとか\n                                    break;\n                                }\n                                case 'room': {\n                                    var data = obj.data;\n                                    _this.fetchComment(data.messageServer.uri, data.threadId);\n                                    break;\n                                }\n                                case 'statistics': {\n                                    // 視聴者数とか\n                                    break;\n                                }\n                                case 'schedule': {\n                                    // 開始、終了時刻\n                                    break;\n                                }\n                                case 'akashic': {\n                                    var data = obj.data;\n                                    break;\n                                }\n                                case 'ping': {\n                                    tWs.send(JSON.stringify({ type: 'pong' }));\n                                    break;\n                                }\n                                // 切断。枠が終了した時もここ。\n                                case 'disconnect': {\n                                    var data = obj.data;\n                                    _this.stop();\n                                    _this.start();\n                                    break;\n                                }\n                            }\n                        };\n                        tWs.on('open', function () {\n                            log.info('startWatching');\n                            tWs.send(JSON.stringify({\n                                type: 'startWatching',\n                                data: { stream: { quality: 'high', protocol: 'hls', latency: 'low', chasePlay: false }, room: { protocol: 'webSocket', commentable: true }, reconnect: false },\n                            }));\n                            log.info('getAkashic');\n                            tWs.send(JSON.stringify({ type: 'getAkashic', data: { chasePlay: false } }));\n                        });\n                        tWs.on('error', function (event) {\n                            log.error('[fetchCommentServerThread] スレッドID取得のWebSocketでエラー。再接続を実施。');\n                            log.error(JSON.stringify(event, null, '  '));\n                            _this.emit('error', new Error(\"\\u30B9\\u30EC\\u30C3\\u30C9ID\\u53D6\\u5F97\\u306EWebSocket\\u3067Error\"));\n                            if (tWs.OPEN)\n                                tWs.close();\n                            _this.fetchCommentServerThread();\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        /**\n         *\n         * @param wsUrl コメントサーバのWebSocket URL\n         * @param threadId threadID\n         */\n        _this.fetchComment = function (wsUrl, threadId) { return __awaiter(_this, void 0, void 0, function () {\n            var ws;\n            var _this = this;\n            return __generator(this, function (_a) {\n                log.info(\"[fetchComment] threadId = \" + threadId);\n                ws = new ws_1.default(wsUrl, 'niconama', {\n                    headers: {\n                        'Sec-WebSocket-Extensions': 'permessage-deflate; client_max_window_bits',\n                        'Sec-WebSocket-Protocol': 'msg.nicovideo.jp#json',\n                    },\n                });\n                ws.on('message', function (event) {\n                    var _a, _b, _c;\n                    var obj = JSON.parse(event.toString());\n                    // 初回取得時は ping, ping, thread, chat, chat..., ping, pingの順で受け取る\n                    // log.info(`[fetchComment] WS received  - ${JSON.stringify(obj)}`);\n                    // コメント番号更新\n                    if ((_a = obj === null || obj === void 0 ? void 0 : obj.chat) === null || _a === void 0 ? void 0 : _a.no) {\n                        _this.latestNo = obj.chat.no;\n                    }\n                    if (((_b = obj === null || obj === void 0 ? void 0 : obj.ping) === null || _b === void 0 ? void 0 : _b.content) === 'rf:0') {\n                        _this.isFirstCommentReceived = true;\n                        _this.emit('open', { liveId: '', number: _this.latestNo });\n                    }\n                    if (!_this.isFirstCommentReceived)\n                        return;\n                    var chat = obj;\n                    var comment = (_c = chat.chat) === null || _c === void 0 ? void 0 : _c.content;\n                    if (!comment)\n                        return;\n                    log.info(\"[fetchComment]WS - content: \" + comment);\n                    // /で始まるのはなんかコマンドなので除外する\n                    if (comment.match(/^\\/[a-z]+ /))\n                        return;\n                    var item = {\n                        number: chat.chat.no.toString(),\n                        name: '',\n                        comment: comment,\n                    };\n                    _this.emit('comment', item);\n                });\n                ws.on('error', function (event) {\n                    log.error('[fetchComment]なんかエラーだ');\n                    log.error(JSON.stringify(event, null, '  '));\n                    _this.emit('error', new Error(\"\\u30CB\\u30B3\\u751F\\u30C1\\u30E3\\u30C3\\u30C8\\u306EWebSocket\\u3067Error\"));\n                    if (ws.OPEN)\n                        ws.close();\n                    _this.fetchComment(wsUrl, threadId);\n                });\n                ws.on('open', function () {\n                    log.info('[fetchComment] connected');\n                    ws.send(JSON.stringify([\n                        { ping: { content: 'rs:0' } },\n                        { ping: { content: 'ps:0' } },\n                        // eslint-disable-next-line @typescript-eslint/camelcase\n                        { thread: { thread: threadId, version: '20061206', user_id: 'guest', res_from: -150, with_global: 1, scores: 1, nicoru: 0 } },\n                        { ping: { content: 'pf:0' } },\n                        { ping: { content: 'rf:0' } },\n                    ]));\n                });\n                // 定期的にping打つ\n                this.commentPingIntervalObj = setInterval(function () {\n                    if (ws.OPEN) {\n                        ws.ping();\n                    }\n                    else {\n                        clearInterval(_this.commentPingIntervalObj);\n                    }\n                }, 30 * 1000);\n                this.commentSocket = ws;\n                return [2 /*return*/];\n            });\n        }); };\n        /** コメント取得の停止 */\n        _this.stop = function () {\n            _this.isFirstCommentReceived = false;\n            _this.latestNo = NaN;\n            if (_this.commentPingIntervalObj) {\n                clearInterval(_this.commentPingIntervalObj);\n                _this.commentPingIntervalObj = null;\n            }\n            if (_this.commentSocket)\n                _this.commentSocket.close();\n            _this.emit('end');\n        };\n        if ('communityId' in options) {\n            _this.communityId = options.communityId;\n        }\n        else {\n            throw TypeError('Required channelId.');\n        }\n        return _this;\n    }\n    NiconamaComment.prototype.start = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (this.communityId) {\n                    this.emit('wait');\n                    this.pollingStartBroadcast();\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    NiconamaComment.prototype.on = function (event, listener) {\n        return _super.prototype.on.call(this, event, listener);\n    };\n    return NiconamaComment;\n}(events_1.EventEmitter));\nexports.default = NiconamaComment;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.postRes = exports.readBoard = void 0;\n/**\n * 5ch互換BBS読み込み用モジュール\n */\nvar axios_1 = __importDefault(require(\"axios\"));\nvar iconv_lite_1 = __importDefault(require(\"iconv-lite\")); // 文字コード変換用パッケージ\nvar electron_log_1 = __importDefault(require(\"electron-log\"));\nvar log = electron_log_1.default.scope('bbs');\nvar https_1 = __importDefault(require(\"https\"));\nvar encoding_japanese_1 = __importDefault(require(\"encoding-japanese\"));\nvar instance = axios_1.default.create({\n    httpsAgent: new https_1.default.Agent({\n        rejectUnauthorized: false,\n    }),\n});\n/** ステータスコード304 _NotModified */\nvar NOT_MODIFIED = '304';\nvar RANGE_NOT_SATISFIABLE = '416';\n/** スレ一覧を読み込む */\nvar readBoard = function (boardUrl) { return __awaiter(void 0, void 0, void 0, function () {\n    var requestUrl, list, options, response, str, error_1;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                requestUrl = boardUrl + \"subject.txt\";\n                list = [];\n                options = {\n                    url: requestUrl,\n                    method: 'GET',\n                    timeout: 3 * 1000,\n                    responseType: 'arraybuffer',\n                };\n                _a.label = 1;\n            case 1:\n                _a.trys.push([1, 3, , 4]);\n                return [4 /*yield*/, instance(options)];\n            case 2:\n                response = _a.sent();\n                str = iconv_lite_1.default.decode(Buffer.from(response.data), 'Shift_JIS');\n                // パースして格納\n                list.push.apply(list, str\n                    .split('\\n')\n                    .filter(function (item) { return item; })\n                    .map(function (line) { return parseThreadList(boardUrl, line); }));\n                return [3 /*break*/, 4];\n            case 3:\n                error_1 = _a.sent();\n                if (error_1.status == NOT_MODIFIED) {\n                    log.error('5ch系BBS板取得APIリクエストエラー、NOT_MODIFIED');\n                }\n                else if (error_1.status == RANGE_NOT_SATISFIABLE) {\n                    log.error('5ch系BBS板取得APIリクエストエラー、RANGE_NOT_SATISFIABLE');\n                }\n                else {\n                    log.error('5ch系BBS板取得APIリクエストエラー、message=' + error_1.message);\n                }\n                throw new Error('connection error');\n            case 4: return [2 /*return*/, list];\n        }\n    });\n}); };\nexports.readBoard = readBoard;\n/**\n * レスを投稿する\n * @param hostname ホスト名。https://hogehoge/\n * @param threadNumber スレ番号 12345678\n * @param boardId 板ID pasta04\n * @param message 投稿文\n */\nvar postRes = function (hostname, threadNumber, boardId, message) { return __awaiter(void 0, void 0, void 0, function () {\n    var unicodeArray, i, sjisArray, encodedKeyword, result;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                unicodeArray = [];\n                for (i = 0; i < message.length; i++) {\n                    unicodeArray.push(message.charCodeAt(i));\n                }\n                sjisArray = encoding_japanese_1.default.convert(unicodeArray, {\n                    to: 'SJIS',\n                    from: 'UNICODE',\n                });\n                encodedKeyword = encoding_japanese_1.default.urlEncode(sjisArray);\n                // log.info(encodeURIComponent.toString());\n                log.info(hostname + \"test/bbs.cgi\");\n                log.info(\"FROM=&MESSAGE=\" + encodedKeyword + \"&mail=sage&key=\" + threadNumber + \"&bbs=\" + boardId);\n                return [4 /*yield*/, axios_1.default.post(hostname + \"test/bbs.cgi\", \"FROM=&MESSAGE=\" + encodedKeyword + \"&mail=sage&key=\" + threadNumber + \"&bbs=\" + boardId, {\n                        headers: {\n                            Accept: '*/*',\n                            'Content-Type': 'application/x-www-form-urlencoded',\n                            'Accept-Encoding': 'gzip, deflate, br',\n                            Cookie: 'MAIL=\"sage\"; NAME=\"\"',\n                        },\n                        withCredentials: true,\n                    })];\n            case 1:\n                result = _a.sent();\n                return [2 /*return*/];\n        }\n    });\n}); };\nexports.postRes = postRes;\nvar Read5ch = /** @class */ (function () {\n    function Read5ch() {\n        var _this = this;\n        /**\n         * レス読み込み\n         * 引数で指定した板からレスを読む\n         * レス番号を指定していない場合は全件取得\n         * @param threadUrl スレURL\n         * @param resNum レス番号\n         */\n        this.read = function (threadUrl, resNum) { return __awaiter(_this, void 0, void 0, function () {\n            var rep, requestUrl, range, options, responseJson, response, headers, str, result, dateStr, date, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // log.info(`[Read5ch] threadUrl=${threadUrl} resNum=${resNum}`);\n                        // 板や最終レス番号がかわったら最初からとり直す(lastmodifiと rangeのリセット)\n                        if (threadUrl != this.lastThreadUrl || Number.isNaN(resNum) || resNum < this.lastResNumber) {\n                            this.lastThreadUrl = threadUrl;\n                            this.lastModified = null;\n                            this.lastByte = 0;\n                            this.lastWroteDate = null;\n                            log.info(' reset');\n                        }\n                        else {\n                            log.debug('noreset');\n                        }\n                        rep = /\\/test\\/read.cgi(\\/.+)(\\/.+)\\//;\n                        requestUrl = threadUrl.replace(rep, '$1/dat$2.dat');\n                        range = this.lastByte;\n                        options = {\n                            url: requestUrl,\n                            method: 'GET',\n                            timeout: 3 * 1000,\n                            responseType: 'arraybuffer',\n                            headers: {\n                                'if-modified-since': this.lastModified,\n                                range: 'bytes=' + range + '-',\n                            },\n                            validateStatus: function (status) {\n                                return status >= 200 && status <= 304;\n                            },\n                        };\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, instance(options)];\n                    case 2:\n                        response = _a.sent();\n                        if (response.status === 304) {\n                            log.info('status 304');\n                            return [2 /*return*/, []];\n                        }\n                        headers = response.headers;\n                        str = iconv_lite_1.default.decode(Buffer.from(response.data), 'Shift_JIS');\n                        // レスポンスオブジェクト作成、content-rangeがある場合とない場合で処理を分ける\n                        if (headers['content-range'] == null || this.lastByte == 0) {\n                            log.debug('content-range=' + headers['content-range']);\n                            result = parseNewResponse(str, resNum);\n                            responseJson = result.result;\n                        }\n                        else {\n                            responseJson = parseDiffResponse(str, resNum);\n                        }\n                        // 最終書き込み時刻の整合性チェック\n                        // ぜろちゃんねる固有の問題？たまにデータが巻き戻る\n                        if (responseJson.length > 0) {\n                            dateStr = responseJson[responseJson.length - 1].date;\n                            if (dateStr) {\n                                date = new Date(dateStr);\n                                if (this.lastWroteDate) {\n                                    // スレが変わったわけでもないのに最終書き込み時刻よりも古いデータが取得できた場合は無かったことにする\n                                    if (this.lastWroteDate > date) {\n                                        log.warn(\"\\u6642\\u523B\\u4E0D\\u6574\\u5408: unacast: \" + this.lastWroteDate + \" bbs: \" + date);\n                                        responseJson = [];\n                                    }\n                                    else {\n                                        this.lastWroteDate = date;\n                                    }\n                                }\n                                else {\n                                    this.lastWroteDate = date;\n                                }\n                            }\n                        }\n                        // LastModifiedとRange更新処理\n                        if (responseJson.length > 0 && headers['last-modified'] != null) {\n                            this.lastModified = headers['last-modified'];\n                        }\n                        // 最終レス番更新\n                        if (responseJson.length > 0) {\n                            this.lastResNumber = Number(responseJson[responseJson.length - 1].number);\n                        }\n                        // 取得バイト数表示\n                        if (headers['content-length'] != null && responseJson.length > 0) {\n                            this.lastByte = this.lastByte + parseInt(headers['content-length']) - 1;\n                            log.debug('lastByte=' + this.lastByte);\n                        }\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_2 = _a.sent();\n                        responseJson = [];\n                        if (error_2.status == NOT_MODIFIED) {\n                            log.error('5ch系BBSレス取得APIリクエストエラー、NOT_MODIFIED');\n                        }\n                        else if (error_2.status == RANGE_NOT_SATISFIABLE) {\n                            log.error('5ch系BBSレス取得APIリクエストエラー、RANGE_NOT_SATISFIABLE');\n                        }\n                        else {\n                            log.error('5ch系BBSレス取得APIリクエストエラー、message=' + error_2.message);\n                        }\n                        throw new Error('connection error');\n                    case 4: return [2 /*return*/, responseJson];\n                }\n            });\n        }); };\n        this.lastThreadUrl = '';\n        this.lastResNumber = 0;\n        this.lastModified = null;\n        this.lastByte = 0;\n        this.lastWroteDate = null;\n    }\n    return Read5ch;\n}());\n/**\n * 全取得したレスポンス（複数）のパース\n * 戻りとしてパースしたjsonオブジェクトの配列を返す\n * @param res 板から返却されたdat\n * @param resNum リクエストされたレス番号\n */\nvar parseNewResponse = function (res, resNum) {\n    log.info(\"parseNewResponse: res=\" + res.length + \" resNum=\" + resNum);\n    // 結果を格納する配列\n    var result = [];\n    // レス番号\n    var num = 0;\n    // 新着レスを改行ごとにSplitする\n    var resArray = res.split(/\\r\\n|\\r|\\n/);\n    // 新着なしなら戻る。\n    if (resArray.length === 0) {\n        return { result: result, lastResNumber: resNum };\n    }\n    // 配列の最後に空の要素が入ることがあるので取り除く\n    if (resArray[resArray.length - 1].length === 0) {\n        resArray.pop();\n    }\n    // レス指定なしの場合全件取得\n    if (Number.isNaN(resNum) || resNum < 1) {\n        log.info(\"resNum: \" + resNum + \" \");\n        num = 0;\n    }\n    else {\n        num = resNum;\n    }\n    // log.info(`num = ${num}  resArrayLength = ${resArray.length}   ${resArray[num]}`);\n    // 1行ごとにパースする\n    for (; num < resArray.length; num++) {\n        // パースメソッド呼び出し\n        if (resArray[num].length > 0) {\n            result.push(parseResponse(resArray[num], num + 1));\n        }\n    }\n    // パースしたオブジェクトの配列を返却\n    return { result: result, lastResNumber: num + 1 };\n};\n/**\n * 差分取得したレスポンス（複数）のパース\n * 戻りとしてパースしたjsonオブジェクトの配列を返す\n * @param res 板から返却されたdat1行分\n * @param resNum リクエストされたレス番号\n */\nvar parseDiffResponse = function (res, resNum) {\n    log.info(\"parseDiffResponse: res=\" + res.length + \" resNum=\" + resNum);\n    //結果を格納する配列\n    var result = [];\n    // レス番号\n    var num = resNum + 1;\n    //新着レスを改行ごとにSplitする\n    var resArray = res.split(/\\r\\n|\\r|\\n/);\n    // 新着なしなら戻る。\n    if (resArray.length === 0) {\n        return result;\n    }\n    else {\n        // 配列の最後に空の要素が入ることがあるので取り除く\n        if (resArray[resArray.length - 1].length == 0) {\n            resArray.pop();\n        }\n    }\n    log.debug('purseDiffResponse 取得レス番号=' + num);\n    //1行ごとにパースする\n    resArray.forEach(function (value) {\n        //パースメソッド呼び出し\n        if (value.length > 0) {\n            result.push(parseResponse(value, num));\n            num++;\n        }\n    });\n    // パースしたオブジェクトの配列を返却\n    return result;\n};\n/**\n * スレ一覧のパース\n * @param String // res レスポンス1レス\n * @param Integer // num レス番（0スタート）\n */\nvar parseThreadList = function (boardUrl, subjectLine) {\n    var _a, _b, _c, _d, _e;\n    //APIの返却値を<>で分割\n    //レスの要素\n    //0:dat名\n    //1:スレタイ（レス数）\n    var splitRes = subjectLine.split('<>');\n    // log.debug(splitRes);\n    var datNum = splitRes[0].replace('.dat', '');\n    var hostname = (_b = (_a = boardUrl.match(/^https?:\\/\\/.+?\\//)) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : '';\n    var boardName = boardUrl.replace(hostname, '');\n    var url = hostname + \"test/read.cgi/\" + boardName + datNum + \"/\";\n    var titleTemp = splitRes[1];\n    var name = (_d = (_c = titleTemp.match(/(.*?) \\(\\d+\\)$/)) === null || _c === void 0 ? void 0 : _c[1]) !== null && _d !== void 0 ? _d : '★取得失敗★';\n    var resNum = Number((_e = titleTemp.match(/\\(\\d+\\)$/)) === null || _e === void 0 ? void 0 : _e[0].replace(/\\(|\\)/g, ''));\n    // オブジェクトを返却\n    return {\n        url: url,\n        name: name,\n        resNum: resNum,\n    };\n};\n/**\n * レスのパース\n * @param res レスポンス1レス\n * @param num レス番\n */\nvar parseResponse = function (res, num) {\n    //APIの返却値を<>で分割\n    //レスの要素\n    //0:名前\n    //1:メアド\n    //2:日付とID （2019/11/03(日) 08:55:00 ID:kanikani）みたいに表示\n    //3:本文\n    //4:スレタイ （1レス目のみ）\n    var splitRes = res.split('<>');\n    // 日付とID分離処理、' ID:'で区切る\n    var dateId = splitRes[2].split(' ID:');\n    var date = dateId[0];\n    var id = dateId.length === 2 ? dateId[1] : '';\n    var resJson = {\n        number: num.toString(),\n        name: splitRes[0],\n        email: splitRes[1],\n        date: date,\n        text: splitRes[3],\n        threadTitle: splitRes[4] ? splitRes[4] : '',\n        id: id,\n        imgUrl: '',\n        from: 'bbs',\n    };\n    // オブジェクトを返却\n    return resJson;\n};\nexports.default = Read5ch;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.postRes = exports.readBoard = void 0;\n/**\n * したらば読み込み用モジュール\n */\nvar axios_1 = __importDefault(require(\"axios\"));\nvar https_1 = __importDefault(require(\"https\"));\nvar iconv_lite_1 = __importDefault(require(\"iconv-lite\")); // 文字コード変換用パッケージ\nvar electron_log_1 = __importDefault(require(\"electron-log\"));\nvar log = electron_log_1.default.scope('bbs');\nvar encoding_japanese_1 = __importDefault(require(\"encoding-japanese\"));\n/** スレ一覧を読み込む */\nvar readBoard = function (boardUrl) { return __awaiter(void 0, void 0, void 0, function () {\n    var requestUrl, list, options, response, str, error_1;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                requestUrl = boardUrl + \"subject.txt\";\n                list = [];\n                options = {\n                    url: requestUrl,\n                    method: 'GET',\n                    timeout: 3 * 1000,\n                    responseType: 'arraybuffer',\n                };\n                _a.label = 1;\n            case 1:\n                _a.trys.push([1, 3, , 4]);\n                return [4 /*yield*/, axios_1.default(options)];\n            case 2:\n                response = _a.sent();\n                str = iconv_lite_1.default.decode(Buffer.from(response.data), 'EUC-JP');\n                // パースして格納\n                list.push.apply(list, str\n                    .split('\\n')\n                    .filter(function (item) { return item; })\n                    .map(function (line) { return parseThreadList(boardUrl, line); }));\n                return [3 /*break*/, 4];\n            case 3:\n                error_1 = _a.sent();\n                log.error('[Read5ch.js]5ch系BBS板取得APIリクエストエラー、message=' + error_1.message);\n                throw new Error('connection error');\n            case 4: return [2 /*return*/, list];\n        }\n    });\n}); };\nexports.readBoard = readBoard;\n/**\n * レスを投稿する\n * @param hostname ホスト名。https://hogehoge/\n * @param threadNumber スレ番号 12345678\n * @param boardId 板ID pasta04\n * @param message 投稿文\n */\nvar postRes = function (hostname, threadNumber, boardId, message) { return __awaiter(void 0, void 0, void 0, function () {\n    var unicodeArray, i, sjisArray, encodedKeyword, dir, bbs, result;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                unicodeArray = [];\n                for (i = 0; i < message.length; i++) {\n                    unicodeArray.push(message.charCodeAt(i));\n                }\n                sjisArray = encoding_japanese_1.default.convert(unicodeArray, {\n                    to: 'EUCJP',\n                    from: 'UNICODE',\n                });\n                encodedKeyword = encoding_japanese_1.default.urlEncode(sjisArray);\n                dir = boardId.split('/')[0];\n                bbs = boardId.split('/')[1];\n                return [4 /*yield*/, axios_1.default.post(hostname + \"bbs/write.cgi/\" + boardId + \"/\" + threadNumber + \"/\", \"dir=\" + dir + \"&bbs=\" + bbs + \"&key=\" + threadNumber + \"&time=\" + new Date().getTime() + \"&name=&MAIL=sage&MESSAGE=\" + encodedKeyword, {\n                        headers: {\n                            Accept: '*/*',\n                            'Content-Type': 'application/x-www-form-urlencoded',\n                            'Accept-Encoding': 'gzip, deflate, br',\n                            Referer: \"\" + hostname + boardId + \"/\",\n                            Cookie: 'MAIL=\"sage\"; NAME=\"\"',\n                        },\n                        withCredentials: true,\n                    })];\n            case 1:\n                result = _a.sent();\n                return [2 /*return*/];\n        }\n    });\n}); };\nexports.postRes = postRes;\nvar ReadSitaraba = /** @class */ (function () {\n    function ReadSitaraba() {\n        var _this = this;\n        /**\n         * レス読み込み\n         * @description 引数で指定した板からレスを読む。\n         * @description レス番号を指定していない場合は全件取得\n         * @param threadUrl スレURL\n         * @param resNum レス番号\n         */\n        this.read = function (threadUrl, resNum) { return __awaiter(_this, void 0, void 0, function () {\n            var requestUrl, options, response, str, responseJson, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        requestUrl = threadUrl.replace('read.cgi', 'rawmode.cgi');\n                        if (resNum > 0) {\n                            // レス番号がある場合レス番号以降を取得\n                            requestUrl += resNum + '-';\n                        }\n                        else {\n                            // レス番号がない場合全県取得\n                            requestUrl += '';\n                        }\n                        options = {\n                            url: requestUrl,\n                            method: 'GET',\n                            responseType: 'arraybuffer',\n                            timeout: 3 * 1000,\n                            httpsAgent: new https_1.default.Agent({\n                                rejectUnauthorized: false,\n                            }),\n                        };\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, axios_1.default(options)];\n                    case 2:\n                        response = _a.sent();\n                        str = decodeUnicodeStr(iconv_lite_1.default.decode(Buffer.from(response.data), 'EUC-JP'));\n                        responseJson = parseNewResponse(str);\n                        return [2 /*return*/, responseJson];\n                    case 3:\n                        e_1 = _a.sent();\n                        // 通信エラー\n                        throw new Error(\"\\u901A\\u4FE1\\u30A8\\u30E9\\u30FC: \" + requestUrl + \" stack=\" + e_1);\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); };\n    }\n    return ReadSitaraba;\n}());\n/**\n * 取得したレスポンス（複数）のパース\n * @param res\n */\nvar parseNewResponse = function (res) {\n    //結果を格納する配列\n    var result = [];\n    // 新着レスを改行ごとにSplitする\n    var resArray = res.split(/\\r\\n|\\r|\\n/);\n    // 1行ごとにパースする\n    resArray.forEach(function (value) {\n        // パースメソッド呼び出し\n        if (value.length > 0) {\n            result.push(purseResponse(value));\n        }\n    });\n    return result;\n};\n/**\n * スレ一覧のパース\n * @param String // res レスポンス1レス\n * @param Integer // num レス番（0スタート）\n */\nvar parseThreadList = function (boardUrl, subjectLine) {\n    var _a, _b, _c, _d, _e;\n    //APIの返却値を<>で分割\n    //レスの要素\n    //0:dat名\n    //1:スレタイ（レス数）\n    var splitRes = subjectLine.split(',');\n    // log.debug(splitRes);\n    var datNum = splitRes[0].replace('.cgi', '');\n    var hostname = (_b = (_a = boardUrl.match(/^https?:\\/\\/.+?\\//)) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : '';\n    var boardName = boardUrl.replace(hostname, '');\n    var url = hostname + \"bbs/read.cgi/\" + boardName + datNum + \"/\";\n    // log.info(`${hostname}  ${boardName} ${datNum}`);\n    var titleTemp = splitRes[1];\n    var name = (_d = (_c = titleTemp.match(/(.*?)\\(\\d+\\)$/)) === null || _c === void 0 ? void 0 : _c[1]) !== null && _d !== void 0 ? _d : '★取得失敗★';\n    var resNum = Number((_e = titleTemp.match(/\\(\\d+\\)$/)) === null || _e === void 0 ? void 0 : _e[0].replace(/\\(|\\)/g, ''));\n    // オブジェクトを返却\n    return {\n        url: url,\n        name: name,\n        resNum: resNum,\n    };\n};\n/**\n * レスポンスのパース\n * Jsonオブジェクトを返却する\n * @param String // res レスポンス1レス\n */\nvar purseResponse = function (res) {\n    //APIの返却値を<>で分割\n    //レスの要素\n    //0:レス番号\n    //1:名前\n    //2:メアド\n    //3:日付\n    //4:本文\n    //5:スレタイ\n    //6:ID\n    var splitRes = res.split('<>');\n    var resJson = {\n        number: splitRes[0],\n        name: splitRes[1],\n        email: splitRes[2],\n        date: splitRes[3],\n        text: splitRes[4],\n        threadTitle: splitRes[5] ? splitRes[5] : '',\n        id: splitRes[6],\n        imgUrl: '',\n        from: 'bbs',\n    };\n    // オブジェクトを返却\n    return resJson;\n};\n/** したらばだけは全角ダッシュがUnicode文字列として格納されるので変換する */\nvar decodeUnicodeStr = function (str) {\n    return str.replace(/&#65374;/g, '～');\n};\nexports.default = ReadSitaraba;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createTranslateDom = exports.sendDom = exports.createDom = exports.findSeList = void 0;\nvar path_1 = __importDefault(require(\"path\"));\nvar express_1 = __importDefault(require(\"express\"));\nvar cors_1 = __importDefault(require(\"cors\"));\nvar electron_log_1 = __importDefault(require(\"electron-log\"));\nvar dank_twitch_irc_1 = require(\"dank-twitch-irc\");\nvar youtube_chat_1 = require(\"./youtube-chat\");\nvar electron_1 = require(\"electron\");\nvar express_ws_1 = __importDefault(require(\"express-ws\"));\nvar util_1 = require(\"./util\");\n// レス取得APIをセット\nvar getRes_1 = __importStar(require(\"./getRes\"));\nvar bouyomi_chan_1 = __importDefault(require(\"./bouyomi-chan\"));\nvar child_process_1 = require(\"child_process\");\nvar const_1 = require(\"./const\");\nvar niconama_1 = __importDefault(require(\"./niconama\"));\nvar jpnkn_1 = __importDefault(require(\"./jpnkn\"));\nvar googletrans_1 = __importDefault(require(\"googletrans\"));\nvar app;\n// サーバーをグローバル変数にセットできるようにする（サーバー停止処理のため）\nvar server;\n/** 棒読みちゃんインスタンス */\nvar bouyomi;\n/** スレッド定期取得実行するか */\nvar threadIntervalEvent = false;\n/** キュー処理実行するか */\nvar isExecuteQue = false;\n/** 接続中の全WebSocket */\nvar aWss;\nvar serverId = 0;\n/**\n * 設定の適用\n */\nelectron_1.ipcMain.on(const_1.electronEvent.APPLY_CONFIG, function (event, config) { return __awaiter(void 0, void 0, void 0, function () {\n    var isChangedUrl, isChangeSePath, ret;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                electron_log_1.default.info('[apply-config] start');\n                electron_log_1.default.info(config);\n                isChangedUrl = globalThis.config.url !== config.url;\n                isChangeSePath = globalThis.config.sePath !== config.sePath;\n                globalThis.config = config;\n                if (!isChangeSePath) return [3 /*break*/, 2];\n                return [4 /*yield*/, exports.findSeList()];\n            case 1:\n                _a.sent();\n                _a.label = 2;\n            case 2:\n                // initメッセージ\n                resetInitMessage();\n                if (!isChangedUrl) return [3 /*break*/, 4];\n                return [4 /*yield*/, getRes_1.getRes(globalThis.config.url, NaN)];\n            case 3:\n                ret = _a.sent();\n                electron_log_1.default.debug(ret);\n                if (ret.length === 0) {\n                    globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.SHOW_ALERT, '掲示板URLがおかしそうです');\n                    return [2 /*return*/];\n                }\n                globalThis.electron.threadNumber = Number(ret[ret.length - 1].number);\n                electron_log_1.default.info(\"[apply-config] new res num is \" + globalThis.electron.threadNumber);\n                // チャットウィンドウとブラウザに、末尾のスレだけ反映する\n                exports.sendDom([ret[ret.length - 1]]);\n                // スレタイ更新\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'bbs', category: 'title', message: ret[0].threadTitle });\n                _a.label = 4;\n            case 4: return [2 /*return*/];\n        }\n    });\n}); });\n/**\n * サーバー起動\n */\nelectron_1.ipcMain.on(const_1.electronEvent.START_SERVER, function (event, config) { return __awaiter(void 0, void 0, void 0, function () {\n    var expressApp, expressInstance, nico, jpn;\n    return __generator(this, function (_a) {\n        globalThis.electron.chatWindow.webContents.send(const_1.electronEvent.CLEAR_COMMENT);\n        globalThis.electron.translateWindow.webContents.send(const_1.electronEvent.CLEAR_COMMENT);\n        globalThis.electron.threadNumber = 0;\n        globalThis.electron.commentQueueList = [];\n        globalThis.electron.threadConnectionError = 0;\n        serverId = new Date().getTime();\n        expressApp = express_1.default();\n        expressApp.use(cors_1.default());\n        expressInstance = express_ws_1.default(expressApp);\n        app = expressInstance.app;\n        aWss = expressInstance.getWss();\n        app.set('view engine', 'ejs');\n        // viewディレクトリの指定\n        app.set('views', path_1.default.resolve(__dirname, '../views'));\n        // 設定情報をグローバル変数へセットする\n        globalThis.config = config;\n        electron_log_1.default.debug('[startServer]設定値 = ');\n        electron_log_1.default.debug(globalThis.config);\n        app.get('/', function (req, res, next) {\n            res.render('server', config);\n            req.connection.end();\n        });\n        // サーバー設定のIF\n        app.get('/config', function (req, res, next) {\n            res.send(JSON.stringify(globalThis.config));\n        });\n        // 静的コンテンツはpublicディレクトリの中身を使用するという宣言\n        app.use(express_1.default.static(path_1.default.resolve(__dirname, '../public')));\n        // 2ch互換掲示板の取得\n        app.use('/getRes', getRes_1.default);\n        // SEを取得する\n        if (globalThis.config.sePath) {\n            exports.findSeList();\n        }\n        // Twitchに接続\n        if (globalThis.config.twitchId) {\n            startTwitchChat();\n        }\n        // Youtubeチャット\n        if (globalThis.config.youtubeId || globalThis.config.youtubeLiveId) {\n            startYoutubeChat();\n        }\n        // ニコ生\n        if (globalThis.config.niconicoId) {\n            nico = new niconama_1.default({ communityId: globalThis.config.niconicoId });\n            globalThis.electron.niconicoChat = nico;\n            nico.on('start', function () {\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'niconico', category: 'status', message: \"connection waiting\" });\n            });\n            nico.on('wait', function () {\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'niconico', category: 'status', message: \"wait for starting boradcast\" });\n            });\n            nico.on('open', function (event) {\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, {\n                    commentType: 'niconico',\n                    category: 'status',\n                    message: \"ok No=\" + event.number,\n                });\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, {\n                    commentType: 'niconico',\n                    category: 'liveId',\n                    message: \"\" + event.liveId,\n                });\n            });\n            nico.on('comment', function (event) {\n                globalThis.electron.commentQueueList.push({ imgUrl: './img/niconico.png', number: event.number, name: event.name, text: event.comment, from: 'niconico' });\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, {\n                    commentType: 'niconico',\n                    category: 'status',\n                    message: \"ok No=\" + event.number,\n                });\n            });\n            // 切断とか枠終了とか\n            nico.on('end', function () {\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, {\n                    commentType: 'niconico',\n                    category: 'status',\n                    message: \"disconnect\",\n                });\n            });\n            nico.on('error', function () {\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'niconico', category: 'status', message: \"error\" });\n            });\n            nico.start();\n        }\n        // jpnkn\n        if (globalThis.config.jpnknFastBoardId) {\n            jpn = new jpnkn_1.default(globalThis.config.jpnknFastBoardId);\n            globalThis.electron.jpnknFast = jpn;\n            jpn.on('start', function () {\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'jpnkn', category: 'status', message: \"connection waiting\" });\n            });\n            jpn.on('open', function () {\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, {\n                    commentType: 'jpnkn',\n                    category: 'status',\n                    message: \"ok\",\n                });\n            });\n            jpn.on('comment', function (event) {\n                globalThis.electron.commentQueueList.push(event);\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, {\n                    commentType: 'jpnkn',\n                    category: 'status',\n                    message: \"ok No=\" + event.number,\n                });\n            });\n            // 切断とか枠終了とか\n            jpn.on('end', function () {\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, {\n                    commentType: 'jpnkn',\n                    category: 'status',\n                    message: \"disconnect\",\n                });\n            });\n            jpn.on('error', function () {\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'jpnkn', category: 'status', message: \"error\" });\n            });\n            jpn.start();\n        }\n        // 棒読みちゃん接続\n        if (config.typeYomiko === 'bouyomi') {\n            if (config.bouyomiPort) {\n                bouyomi = new bouyomi_chan_1.default({ port: config.bouyomiPort, volume: config.bouyomiVolume, prefix: config.bouyomiPrefix });\n            }\n        }\n        // レス取得定期実行\n        threadIntervalEvent = true;\n        getResInterval(serverId);\n        // キュー処理の開始\n        isExecuteQue = true;\n        taskScheduler(serverId);\n        if (globalThis.config.translate.enable) {\n            globalThis.electron.translateWindow.focus();\n            translateTaskScheduler(serverId);\n        }\n        // WebSocketを立てる\n        app.ws('/ws', function (ws, req) {\n            ws.on('message', function (message) {\n                electron_log_1.default.debug('Received: ' + message.toString());\n                if (message.toString() === 'ping') {\n                    ws.send('pong');\n                }\n            });\n            ws.on('close', function () {\n                electron_log_1.default.debug('I lost a client');\n            });\n        });\n        // 指定したポートで待ち受け開始\n        server = app.listen(config.port, function () {\n            electron_log_1.default.debug('[startServer] start server on port:' + config.port);\n        });\n        // 成功メッセージ返却\n        event.returnValue = 'success';\n        return [2 /*return*/];\n    });\n}); });\nelectron_1.ipcMain.on(const_1.electronEvent.COMMENT_TEST, function (event, config) { return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n        globalThis.config = config;\n        return [2 /*return*/, commentTest()];\n    });\n}); });\nvar commentTest = function () { return __awaiter(void 0, void 0, void 0, function () {\n    var textList, text;\n    return __generator(this, function (_a) {\n        // コメントテスト\n        try {\n            textList = [\n                'ﾃｽﾃｽｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗ',\n                '∈(･ω･)∋ ﾀﾞﾑｰ',\n                'おめーらいつまで経っても<br/>ピアキャストかよ',\n                \"Hello everyone!<br/>I'm Unacast<br/><br/>Yes.\",\n            ];\n            text = textList[Math.floor(Math.random() * textList.length)];\n            exports.sendDom([\n                {\n                    id: '100',\n                    name: 'ななしさん',\n                    text: text,\n                    imgUrl: './img/unacast.png',\n                    from: 'bbs',\n                },\n            ]);\n        }\n        catch (e) {\n            electron_log_1.default.debug(e);\n        }\n        return [2 /*return*/];\n    });\n}); };\nvar findSeList = function () { return __awaiter(void 0, void 0, void 0, function () {\n    var list, e_1;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                _a.trys.push([0, 4, , 5]);\n                if (!globalThis.config.sePath) return [3 /*break*/, 2];\n                return [4 /*yield*/, util_1.readWavFiles(globalThis.config.sePath)];\n            case 1:\n                list = _a.sent();\n                globalThis.electron.seList = list.map(function (file) { return globalThis.config.sePath + \"/\" + file; });\n                electron_log_1.default.debug(\"SE files = \" + globalThis.electron.seList.length);\n                return [3 /*break*/, 3];\n            case 2:\n                globalThis.electron.seList = [];\n                _a.label = 3;\n            case 3: return [3 /*break*/, 5];\n            case 4:\n                e_1 = _a.sent();\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.SHOW_ALERT, '着信音のパスがおかしそうです');\n                return [3 /*break*/, 5];\n            case 5: return [2 /*return*/];\n        }\n    });\n}); };\nexports.findSeList = findSeList;\n/**\n * Twitchチャットに接続\n * @description 再接続処理はライブラリが勝手にやってくれる\n */\nvar startTwitchChat = function () { return __awaiter(void 0, void 0, void 0, function () {\n    var twitchChat;\n    return __generator(this, function (_a) {\n        try {\n            twitchChat = new dank_twitch_irc_1.ChatClient();\n            twitchChat.connect();\n            twitchChat.join(globalThis.config.twitchId);\n            globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'twitch', category: 'status', message: 'wait live' });\n            // 接続完了\n            twitchChat.on('ready', function () {\n                electron_log_1.default.debug('[Twitch] Successfully connected to chat');\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'twitch', category: 'status', message: 'ok' });\n            });\n            // チャット受信\n            twitchChat.on('PRIVMSG', function (msg) {\n                electron_log_1.default.info('[Twitch] comment received');\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'twitch', category: 'status', message: 'ok' });\n                // log.info(JSON.stringify(msg, null, '  '));\n                var imgUrl = './img/twitch.png';\n                var name = util_1.escapeHtml(msg.displayName);\n                var text = util_1.escapeHtml(msg.messageText);\n                // エモートを画像タグにする\n                msg.emotes.map(function (emote) {\n                    text = text.replace(emote.code, \"<img src=\\\"https://static-cdn.jtvnw.net/emoticons/v1/\" + emote.id + \"/1.0\\\" />\");\n                });\n                globalThis.electron.commentQueueList.push({ imgUrl: imgUrl, name: name, text: text, from: 'twitch' });\n            });\n            globalThis.electron.twitchChat = twitchChat;\n            // なんかエラーがあった\n            twitchChat.on('error', function (event) {\n                electron_log_1.default.error(\"[Twitch] \" + JSON.stringify(event));\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'twitch', category: 'status', message: 'error!' });\n            });\n            twitchChat.on('close', function (event) {\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'twitch', category: 'status', message: 'connection end' });\n            });\n        }\n        catch (e) {\n            electron_log_1.default.error(e);\n            globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'twitch', category: 'status', message: 'error!' });\n        }\n        return [2 /*return*/];\n    });\n}); };\n/** Youtubeチャットに接続 */\nvar startYoutubeChat = function () { return __awaiter(void 0, void 0, void 0, function () {\n    var createYoutubeComment_1;\n    return __generator(this, function (_a) {\n        try {\n            electron_log_1.default.info('[Youtube Chat] connect started');\n            if (globalThis.config.youtubeLiveId) {\n                globalThis.electron.youtubeChat = new youtube_chat_1.LiveChat({ liveId: globalThis.config.youtubeLiveId });\n            }\n            else {\n                globalThis.electron.youtubeChat = new youtube_chat_1.LiveChat({ channelId: globalThis.config.youtubeId });\n            }\n            globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'youtube', category: 'status', message: 'wait live' });\n            // 接続開始イベント\n            globalThis.electron.youtubeChat.on('start', function (liveId) {\n                electron_log_1.default.info(\"[Youtube Chat] connected liveId = \" + liveId);\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'youtube', category: 'liveid', message: liveId });\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'youtube', category: 'status', message: 'ok' });\n            });\n            // 接続終了イベント\n            globalThis.electron.youtubeChat.on('end', function (reason) {\n                electron_log_1.default.info('[Youtube Chat] disconnect');\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'youtube', category: 'status', message: 'connection end' });\n            });\n            createYoutubeComment_1 = function (comment) {\n                var _a, _b;\n                // log.info(JSON.stringify(comment, null, '  '));\n                var imgUrl = (_b = (_a = comment.author.thumbnail) === null || _a === void 0 ? void 0 : _a.url) !== null && _b !== void 0 ? _b : '';\n                var name = util_1.escapeHtml(comment.author.name);\n                // 絵文字と結合する\n                var text = '';\n                for (var _i = 0, _c = comment.message; _i < _c.length; _i++) {\n                    var message = _c[_i];\n                    var txtItem = message.text;\n                    if (txtItem) {\n                        text += util_1.escapeHtml(txtItem);\n                    }\n                    else {\n                        var imageItem = message;\n                        text += \"<img src=\\\"\" + imageItem.url + \"\\\" width=\\\"\" + 24 + \"\\\" height=\\\"\" + 24 + \"\\\" />\";\n                    }\n                }\n                // const text = escapeHtml((comment.message[0] as any).text);\n                return { imgUrl: imgUrl, name: name, text: text, from: 'youtube' };\n            };\n            // 初期チャット受信\n            globalThis.electron.youtubeChat.on('firstComment', function (comment) {\n                electron_log_1.default.info('[Youtube] comment received');\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'youtube', category: 'status', message: 'ok' });\n                // チャットウィンドウだけに出力\n                sendDomForChatWindow([createYoutubeComment_1(comment)]);\n            });\n            // チャット受信\n            globalThis.electron.youtubeChat.on('comment', function (comment) {\n                electron_log_1.default.info('[Youtube] comment received');\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'youtube', category: 'status', message: 'ok' });\n                globalThis.electron.commentQueueList.push(createYoutubeComment_1(comment));\n            });\n            // 何かエラーがあった\n            globalThis.electron.youtubeChat.on('error', function (err) {\n                electron_log_1.default.error(\"[Youtube Chat] \" + err.message);\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'youtube', category: 'status', message: \"error! \" + err.message });\n            });\n            globalThis.electron.youtubeChat.start();\n        }\n        catch (e) {\n            // たぶんここには来ない\n            electron_log_1.default.error(e);\n        }\n        return [2 /*return*/];\n    });\n}); };\n/**\n * サーバー停止\n */\nelectron_1.ipcMain.on(const_1.electronEvent.STOP_SERVER, function (event) {\n    electron_log_1.default.debug('[startServer] server stop');\n    server.close();\n    aWss.close();\n    app = null;\n    event.returnValue = 'stop';\n    // キュー処理停止\n    isExecuteQue = false;\n    globalThis.electron.commentQueueList = [];\n    // レス取得の停止\n    threadIntervalEvent = false;\n    globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'bbs', category: 'title', message: \"\" });\n    globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'bbs', category: 'status', message: \"connection end\" });\n    // Twitchチャットの停止\n    if (globalThis.electron.twitchChat) {\n        globalThis.electron.twitchChat.close();\n        globalThis.electron.twitchChat.removeAllListeners();\n        globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'twitch', category: 'status', message: \"connection end\" });\n    }\n    // Youtubeチャットの停止\n    if (globalThis.electron.youtubeChat) {\n        globalThis.electron.youtubeChat.stop();\n        globalThis.electron.youtubeChat.removeAllListeners();\n        globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'youtube', category: 'status', message: \"connection end\" });\n        globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'youtube', category: 'liveId', message: \"none\" });\n    }\n    // ニコ生チャットの停止\n    if (globalThis.electron.niconicoChat) {\n        globalThis.electron.niconicoChat.stop();\n        globalThis.electron.niconicoChat.removeAllListeners();\n        globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'niconico', category: 'status', message: \"connection end\" });\n        globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'niconico', category: 'liveId', message: \"none\" });\n    }\n    // jpnkn Fastインターフェース\n    if (globalThis.electron.jpnknFast) {\n        globalThis.electron.jpnknFast.stop();\n        globalThis.electron.jpnknFast.removeAllListeners();\n        globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'jpnkn', category: 'status', message: \"connection end\" });\n    }\n});\nvar getResInterval = function (exeId) { return __awaiter(void 0, void 0, void 0, function () {\n    var resNum, isfirst, result, threadTitle, temp, _loop_1, _i, result_1, item;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                isfirst = false;\n                if (!(!globalThis.config.url && threadIntervalEvent && exeId === serverId)) return [3 /*break*/, 2];\n                return [4 /*yield*/, util_1.sleep(globalThis.config.interval * 1000)];\n            case 1:\n                _a.sent();\n                getResInterval(exeId);\n                return [2 /*return*/];\n            case 2:\n                if (!globalThis.electron.threadNumber) {\n                    // 初回\n                    isfirst = true;\n                    resNum = NaN;\n                }\n                else {\n                    // 2回目以降\n                    resNum = globalThis.electron.threadNumber;\n                }\n                return [4 /*yield*/, getRes_1.getRes(globalThis.config.url, resNum)];\n            case 3:\n                result = _a.sent();\n                if (isfirst && result.length > 0) {\n                    threadTitle = result[0].threadTitle;\n                    globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'bbs', category: 'title', message: threadTitle });\n                }\n                // 指定したレス番以下は除外対象\n                if (resNum) {\n                    result = result.filter(function (res) { return (res.number ? Number(res.number) > resNum : true); });\n                }\n                if (result.length > 0 && result[result.length - 1].number) {\n                    globalThis.electron.threadNumber = Number(result[result.length - 1].number);\n                    if (isfirst) {\n                        temp = result;\n                        if (!globalThis.config.dispSort) {\n                            temp = temp.reverse();\n                        }\n                        sendDomForChatWindow(temp);\n                    }\n                    else {\n                        _loop_1 = function (item) {\n                            // リストに同じレス番があったら追加しない\n                            if (!globalThis.electron.commentQueueList.find(function (comment) { return comment.number === item.number; })) {\n                                globalThis.electron.commentQueueList.push(item);\n                            }\n                        };\n                        for (_i = 0, result_1 = result; _i < result_1.length; _i++) {\n                            item = result_1[_i];\n                            _loop_1(item);\n                        }\n                    }\n                    globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'bbs', category: 'status', message: \"ok res=\" + globalThis.electron.threadNumber });\n                }\n                else if (result.length > 0) {\n                    globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.UPDATE_STATUS, { commentType: 'bbs', category: 'status', message: 'error!' });\n                    // 番号が無くて結果が入ってるのは通信エラーメッセージ\n                    sendDomForChatWindow(result);\n                }\n                return [4 /*yield*/, checkAutoMoveThread()];\n            case 4:\n                _a.sent();\n                return [4 /*yield*/, notifyThreadResLimit()];\n            case 5:\n                _a.sent();\n                if (!(threadIntervalEvent && exeId === serverId)) return [3 /*break*/, 7];\n                return [4 /*yield*/, util_1.sleep(globalThis.config.interval * 1000)];\n            case 6:\n                _a.sent();\n                getResInterval(exeId);\n                _a.label = 7;\n            case 7: return [2 /*return*/];\n        }\n    });\n}); };\n/** レス番が上限かチェックして、超えてたら通知する */\nvar notifyThreadResLimit = function () { return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!(globalThis.config.notifyThreadResLimit > 0 && globalThis.electron.threadNumber >= globalThis.config.notifyThreadResLimit)) return [3 /*break*/, 2];\n                sendDomForChatWindow([\n                    {\n                        name: 'unacastより',\n                        imgUrl: './img/unacast.png',\n                        text: \"\\u30EC\\u30B9\\u304C\" + globalThis.config.notifyThreadResLimit + \"\\u3092\\u8D85\\u3048\\u307E\\u3057\\u305F\\u3002\\u6B21\\u30B9\\u30EC\\u3092\\u7ACB\\u3066\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\",\n                        from: 'system',\n                    },\n                ]);\n                // スレ立て中だと思うのでちょっと待つ\n                return [4 /*yield*/, util_1.sleep(10 * 1000)];\n            case 1:\n                // スレ立て中だと思うのでちょっと待つ\n                _a.sent();\n                _a.label = 2;\n            case 2: return [2 /*return*/];\n        }\n    });\n}); };\nvar checkAutoMoveThread = function () { return __awaiter(void 0, void 0, void 0, function () {\n    var threadUrl, boardInfo, threadList, target;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!globalThis.config.moveThread)\n                    return [2 /*return*/];\n                if (globalThis.electron.threadNumber < 1000)\n                    return [2 /*return*/];\n                threadUrl = globalThis.config.url;\n                return [4 /*yield*/, getRes_1.threadUrlToBoardInfo(threadUrl)];\n            case 1:\n                boardInfo = _a.sent();\n                return [4 /*yield*/, getRes_1.getThreadList(boardInfo.boardUrl)];\n            case 2:\n                threadList = _a.sent();\n                target = threadList.find(function (item) { return item.url !== threadUrl && item.resNum < 1000; });\n                if (!target)\n                    return [2 /*return*/];\n                // 次スレが見つかったので移動する\n                globalThis.electron.commentQueueList.push({\n                    name: 'unacastより',\n                    imgUrl: './img/unacast.png',\n                    text: \"\\u30EC\\u30B91000\\u3092\\u8D85\\u3048\\u307E\\u3057\\u305F\\u3002\\u6B21\\u30B9\\u30EC\\u5019\\u88DC \\u300C\" + target.name + \"\\u300D \\u306B\\u79FB\\u52D5\\u3057\\u307E\\u3059\",\n                    from: 'system',\n                });\n                globalThis.config.url = target.url;\n                globalThis.electron.threadNumber = 0;\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.SAVE_CONFIG, globalThis.config);\n                return [2 /*return*/];\n        }\n    });\n}); };\n/**\n * キューに溜まったコメントをブラウザに表示する\n */\nvar taskScheduler = function (exeId) { return __awaiter(void 0, void 0, void 0, function () {\n    var temp, comment;\n    var _a;\n    var _b, _c, _d, _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                if (!(((_c = (_b = globalThis.electron) === null || _b === void 0 ? void 0 : _b.commentQueueList) === null || _c === void 0 ? void 0 : _c.length) > 0)) return [3 /*break*/, 3];\n                electron_log_1.default.info(\"[taskScheduler] \" + ((_e = (_d = globalThis.electron) === null || _d === void 0 ? void 0 : _d.commentQueueList) === null || _e === void 0 ? void 0 : _e.length));\n                if (!(globalThis.config.commentProcessType === 0)) return [3 /*break*/, 1];\n                temp = __spreadArrays(globalThis.electron.commentQueueList);\n                globalThis.electron.commentQueueList = [];\n                // 新着が上の場合は逆順にする\n                if (!globalThis.config.dispSort) {\n                    temp = temp.reverse();\n                }\n                exports.sendDom(temp);\n                if (globalThis.config.translate.enable) {\n                    (_a = globalThis.electron.translateQueueList).push.apply(_a, temp);\n                }\n                return [3 /*break*/, 3];\n            case 1:\n                comment = globalThis.electron.commentQueueList.shift();\n                return [4 /*yield*/, exports.sendDom([comment])];\n            case 2:\n                _f.sent();\n                if (globalThis.config.translate.enable) {\n                    globalThis.electron.translateQueueList.push(comment);\n                }\n                _f.label = 3;\n            case 3:\n                if (!(isExecuteQue && exeId === serverId)) return [3 /*break*/, 5];\n                return [4 /*yield*/, util_1.sleep(100)];\n            case 4:\n                _f.sent();\n                taskScheduler(exeId);\n                _f.label = 5;\n            case 5: return [2 /*return*/];\n        }\n    });\n}); };\n/**\n * キューに溜まったコメントをブラウザに表示する\n */\nvar translateTaskScheduler = function (exeId) { return __awaiter(void 0, void 0, void 0, function () {\n    var comment;\n    var _a, _b, _c, _d;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                if (!(((_b = (_a = globalThis.electron) === null || _a === void 0 ? void 0 : _a.translateQueueList) === null || _b === void 0 ? void 0 : _b.length) > 0)) return [3 /*break*/, 4];\n                electron_log_1.default.info(\"[translateTaskScheduler] \" + ((_d = (_c = globalThis.electron) === null || _c === void 0 ? void 0 : _c.translateQueueList) === null || _d === void 0 ? void 0 : _d.length));\n                comment = globalThis.electron.translateQueueList.shift();\n                if (!(globalThis.config.translate.targetLang === 'ja' && !util_1.isNihongo(comment.text))) return [3 /*break*/, 2];\n                // 日本語が1文字も入ってなければ翻訳する\n                return [4 /*yield*/, sendDomForTranslateWindow(comment)];\n            case 1:\n                // 日本語が1文字も入ってなければ翻訳する\n                _e.sent();\n                return [3 /*break*/, 4];\n            case 2:\n                if (!(globalThis.config.translate.targetLang === 'en')) return [3 /*break*/, 4];\n                // 英語オンリーってどうやって簡易的に判断するのかよくわからないので全部翻訳する\n                return [4 /*yield*/, sendDomForTranslateWindow(comment)];\n            case 3:\n                // 英語オンリーってどうやって簡易的に判断するのかよくわからないので全部翻訳する\n                _e.sent();\n                _e.label = 4;\n            case 4:\n                if (!(isExecuteQue && exeId === serverId)) return [3 /*break*/, 6];\n                return [4 /*yield*/, util_1.sleep(500)];\n            case 5:\n                _e.sent();\n                translateTaskScheduler(exeId);\n                _e.label = 6;\n            case 6: return [2 /*return*/];\n        }\n    });\n}); };\n/** 読み子によって発話中であるか */\nvar isSpeaking = false;\n/** 読み子を再生する */\nvar playYomiko = function (msg) { return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                // log.info('[playYomiko] start');\n                isSpeaking = true;\n                // 読み子呼び出し\n                switch (config.typeYomiko) {\n                    case 'tamiyasu': {\n                        electron_log_1.default.debug(config.tamiyasuPath + \" \\\"\" + msg + \"\\\"\");\n                        child_process_1.spawn(config.tamiyasuPath, [msg]);\n                        break;\n                    }\n                    case 'bouyomi': {\n                        if (bouyomi)\n                            bouyomi.speak(msg);\n                        break;\n                    }\n                }\n                // 読み子が読んでる時間分相当待つ\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.WAIT_YOMIKO_TIME, msg);\n                _a.label = 1;\n            case 1:\n                if (!isSpeaking) return [3 /*break*/, 3];\n                return [4 /*yield*/, util_1.sleep(50)];\n            case 2:\n                _a.sent();\n                return [3 /*break*/, 1];\n            case 3: return [2 /*return*/];\n        }\n    });\n}); };\nelectron_1.ipcMain.on(const_1.electronEvent.SPEAKING_END, function (event) { return (isSpeaking = false); });\nvar isPlayingSe = false;\nvar playSe = function () { return __awaiter(void 0, void 0, void 0, function () {\n    var wavfilepath;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                wavfilepath = globalThis.electron.seList[Math.floor(Math.random() * globalThis.electron.seList.length)];\n                isPlayingSe = true;\n                globalThis.electron.mainWindow.webContents.send(const_1.electronEvent.PLAY_SOUND_START, { wavfilepath: wavfilepath, volume: globalThis.config.playSeVolume });\n                _a.label = 1;\n            case 1:\n                if (!isPlayingSe) return [3 /*break*/, 3];\n                return [4 /*yield*/, util_1.sleep(50)];\n            case 2:\n                _a.sent();\n                return [3 /*break*/, 1];\n            case 3: return [2 /*return*/];\n        }\n    });\n}); };\nelectron_1.ipcMain.on(const_1.electronEvent.PLAY_SOUND_END, function (event) { return (isPlayingSe = false); });\nvar createDom = function (message, type, isAA) {\n    var domStr = \"<li class=\\\"list-item\\\">\";\n    /** レス番とかの行が何かしら表示対象になっているか */\n    var isResNameShowed = false;\n    // アイコン表示\n    if (globalThis.config.showIcon) {\n        domStr += \"\\n    <span class=\\\"icon-block\\\">\\n      <img class=\\\"icon\\\" src=\\\"\" + message.imgUrl + \"\\\">\\n    </span>\\n    \";\n        isResNameShowed = true;\n    }\n    domStr += \"<div class=\\\"content\\\">\";\n    // レス番表示\n    if (globalThis.config.showNumber && message.number) {\n        domStr += \"\\n      <span class=\\\"resNumber\\\">\" + message.number + \"</span>\\n    \";\n        isResNameShowed = true;\n    }\n    // 名前表示\n    if (globalThis.config.showName && message.name) {\n        domStr += \"<span class=\\\"name\\\">\" + message.name + \"</span>\";\n        isResNameShowed = true;\n    }\n    // 時刻表示\n    if (globalThis.config.showTime && message.date) {\n        domStr += \"<span class=\\\"date\\\">\" + message.date + \"</span>\";\n        isResNameShowed = true;\n    }\n    // 名前と本文を改行で分ける\n    // 名前や時刻の行が一つも無ければ、改行しない\n    if (globalThis.config.newLine && isResNameShowed) {\n        domStr += '<br />';\n    }\n    else if (globalThis.config.aamode.enable && isAA) {\n        // AAモードがオンで対象がAAなら強制的に改行する\n        domStr += '<br />';\n    }\n    // リンクを整形する\n    var text = message.text\n        .replace(/<a .*?>/g, '') // したらばはアンカーをaタグ化している\n        .replace(/<\\\\a>/g, '');\n    // httpの直前に英数字記号が無い箇所を置換\n    var reg = new RegExp(\"(h?ttps?(://[-_.!~*'()a-zA-Z0-9;/?:@&=+$,%#]+))\", 'g');\n    // FIXME: imgタグへの誤爆を雑に回避\n    var tempText = text.replace(/\"http/g, '★★★★http★★★★');\n    var commentText = tempText.replace(reg, '<span class=\"url\" onClick=\\'urlopen(\"$1\")\\'>$1</span>');\n    commentText = commentText.replace(/★★★★http★★★★/g, '\"http');\n    if (isAA) {\n        domStr += \"\\n    <span class=\\\"aares\\\">\\n      \" + commentText + \"\\n    </span>\\n  \";\n    }\n    else {\n        domStr += \"\\n    <span class=\\\"res\\\">\\n      \" + commentText + \"\\n    </span>\\n  \";\n    }\n    // サムネイル表示\n    var isThumbnailShow = (globalThis.config.thumbnail == 1 && type === 'chat') || globalThis.config.thumbnail == 2;\n    if (isThumbnailShow) {\n        var imgreg = new RegExp(\"(h?ttps?(://[-_.!~*'()a-zA-Z0-9;/?:@&=+$,%#]+)(.jpg|.png|.gif))\", 'g');\n        var imgUrls_2 = [];\n        var matched = text.match(imgreg);\n        if (matched) {\n            matched.map(function (value) {\n                // log.info(value);\n                imgUrls_2.push(value);\n            });\n        }\n        if (imgUrls_2.length > 0) {\n            domStr += '<div class=\"thumbnail\">';\n            domStr += imgUrls_2\n                .map(function (url) {\n                var tmp = url;\n                if (tmp.match(/^ttp/)) {\n                    tmp = \"h\" + tmp;\n                }\n                return \"<img class=\\\"img\\\" src=\\\"\" + tmp + \"\\\" onClick='imageopen(\\\"\" + tmp + \"\\\")' />\";\n            })\n                .join('');\n            domStr += '</div>';\n            // 画像URL非表示が有効なら消す\n            if (globalThis.config.hideImgUrl) {\n                for (var _i = 0, imgUrls_1 = imgUrls_2; _i < imgUrls_1.length; _i++) {\n                    var imgurl = imgUrls_1[_i];\n                    // log.info('非表示するぞ ' + imgurl);\n                    domStr = domStr.replace(\"<span class=\\\"url\\\" onClick='urlopen(\\\"\" + imgurl + \"\\\")'>\" + imgurl + \"</span>\", '');\n                }\n            }\n        }\n    }\n    // 〆\n    domStr += \"</div>\\n  </li>\";\n    return domStr;\n};\nexports.createDom = createDom;\n/**\n * コメントのDOMをブラウザに送る\n * 必要ならレス着信音も鳴らす\n * @param message\n */\nvar sendDom = function (messageList) { return __awaiter(void 0, void 0, void 0, function () {\n    var newList, domStr, socketObject_1, text, e_2;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                _a.trys.push([0, 9, , 10]);\n                newList = util_1.judgeAaMessage(messageList);\n                domStr = newList.map(function (message) { return exports.createDom(message, 'server', message.isAA); }).join('\\n');\n                socketObject_1 = {\n                    type: 'add',\n                    message: domStr,\n                };\n                if (aWss) {\n                    aWss.clients.forEach(function (client) {\n                        client.send(JSON.stringify(socketObject_1));\n                    });\n                }\n                // レンダラーのコメント一覧にも表示\n                sendDomForChatWindow(newList);\n                if (!(config.playSe && globalThis.electron.seList.length > 0)) return [3 /*break*/, 2];\n                return [4 /*yield*/, playSe()];\n            case 1:\n                _a.sent();\n                _a.label = 2;\n            case 2:\n                if (!(globalThis.config.typeYomiko !== 'none')) return [3 /*break*/, 6];\n                if (!(newList[newList.length - 1].isAA && config.aamode.enable)) return [3 /*break*/, 4];\n                return [4 /*yield*/, playYomiko(config.aamode.speakWord)];\n            case 3:\n                _a.sent();\n                return [3 /*break*/, 6];\n            case 4:\n                text = newList[newList.length - 1].text.replace(/<br> /g, '\\n ').replace(/<br>/g, '\\n ');\n                text = text.replace(/<img.*?\\/>/g, '');\n                text = text.replace(/<a .*?>/g, '').replace(/<\\/a>/g, '');\n                text = util_1.unescapeHtml(text);\n                if (globalThis.config.yomikoReplaceNewline) {\n                    text = text.replace(/\\r\\n/g, ' ').replace(/\\n/g, ' ');\n                }\n                return [4 /*yield*/, playYomiko(text)];\n            case 5:\n                _a.sent();\n                _a.label = 6;\n            case 6:\n                if (!(globalThis.config.dispType === 1)) return [3 /*break*/, 8];\n                return [4 /*yield*/, util_1.sleep(globalThis.config.minDisplayTime * 1000)];\n            case 7:\n                _a.sent();\n                _a.label = 8;\n            case 8:\n                // 鳴らし終わって読み子が終わった\n                resetInitMessage();\n                return [3 /*break*/, 10];\n            case 9:\n                e_2 = _a.sent();\n                electron_log_1.default.error(e_2);\n                return [3 /*break*/, 10];\n            case 10: return [2 /*return*/];\n        }\n    });\n}); };\nexports.sendDom = sendDom;\n/** チャットウィンドウへのコメント表示 */\nvar sendDomForChatWindow = function (messageList) {\n    var domStr2 = util_1.judgeAaMessage(messageList)\n        .map(function (message) {\n        var imgUrl = message.imgUrl && message.imgUrl.match(/^\\./) ? '../../public/' + message.imgUrl : message.imgUrl;\n        return __assign(__assign({}, message), { imgUrl: imgUrl });\n    })\n        .map(function (message) { return exports.createDom(message, 'chat', message.isAA); })\n        .join('\\n');\n    globalThis.electron.chatWindow.webContents.send(const_1.electronEvent.SHOW_COMMENT, { config: globalThis.config, dom: domStr2 });\n};\nvar resetInitMessage = function () {\n    if (globalThis.config.dispType === 1) {\n        var resetObj_1 = {\n            type: 'reset',\n            message: globalThis.config.initMessage,\n        };\n        aWss.clients.forEach(function (client) {\n            client.send(JSON.stringify(resetObj_1));\n        });\n    }\n};\nvar createTranslateDom = function (message, translated) {\n    var domStr = \"<li class=\\\"list-item\\\">\";\n    /** レス番とかの行が何かしら表示対象になっているか */\n    var isResNameShowed = false;\n    // アイコン表示\n    if (globalThis.config.showIcon) {\n        domStr += \"\\n    <span class=\\\"icon-block\\\">\\n      <img class=\\\"icon\\\" src=\\\"\" + message.imgUrl + \"\\\">\\n    </span>\\n    \";\n    }\n    domStr += \"<div class=\\\"content\\\">\";\n    // レス番表示\n    if (globalThis.config.showNumber && message.number) {\n        domStr += \"\\n      <span class=\\\"resNumber\\\">\" + message.number + \"</span>\\n    \";\n        isResNameShowed = true;\n    }\n    // 名前表示\n    if (globalThis.config.showName && message.name) {\n        domStr += \"<span class=\\\"name\\\">\" + message.name + \"</span>\";\n        isResNameShowed = true;\n    }\n    // 時刻表示\n    if (globalThis.config.showTime && message.date) {\n        domStr += \"<span class=\\\"date\\\">\" + message.date + \"</span>\";\n        isResNameShowed = true;\n    }\n    // 名前と本文を改行で分ける\n    // 名前や時刻の行が一つも無ければ、改行しない\n    if (isResNameShowed) {\n        domStr += '<br />';\n    }\n    electron_log_1.default.info(translated + \"   ---  \" + message.text);\n    domStr += \"\\n  <div class=\\\"res\\\">\\n    \" + translated + \"\\n  </div>\\n  <hr style=\\\"margin: 1px;border-top: 1px solid black\\\" />\\n  <span class=\\\"res-org\\\">\\n    \" + message.text + \"\\n  </span>\\n\";\n    // 〆\n    domStr += \"</div>\\n  </li>\";\n    return domStr;\n};\nexports.createTranslateDom = createTranslateDom;\n/** 翻訳ウィンドウへのコメント表示 */\nvar sendDomForTranslateWindow = function (message) { return __awaiter(void 0, void 0, void 0, function () {\n    var reg, orgText, translated, domStr, e_3;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                electron_log_1.default.info('[sendDomForTranslateWindow]');\n                message.imgUrl = message.imgUrl && message.imgUrl.match(/^\\./) ? '../../public/' + message.imgUrl : message.imgUrl;\n                _a.label = 1;\n            case 1:\n                _a.trys.push([1, 3, , 4]);\n                reg = new RegExp(\"(h?ttps?(://[-_.!~*'()a-zA-Z0-9;/?:@&=+$,%#]+))\", 'g');\n                orgText = message.text\n                    .replace(/<a .*?>/g, '')\n                    .replace(/<\\\\a>/g, '')\n                    .replace(/<img .*?>/g, '')\n                    .replace(/<\\\\img>/g, '')\n                    .replace(reg, '')\n                    .trim();\n                return [4 /*yield*/, googletrans_1.default(util_1.unescapeHtml(orgText), {\n                        to: globalThis.config.translate.targetLang,\n                        from: 'auto',\n                        tld: globalThis.config.translate.targetLang === 'ja' ? 'co.jp' : 'com',\n                    })];\n            case 2:\n                translated = _a.sent();\n                electron_log_1.default.info(translated.text);\n                // もし何もテキストとして残らなかったら表示しない\n                if (!translated.text)\n                    return [2 /*return*/, ''];\n                domStr = exports.createTranslateDom(__assign(__assign({}, message), { text: orgText }), util_1.escapeHtml(translated.text));\n                globalThis.electron.translateWindow.webContents.send(const_1.electronEvent.SHOW_COMMENT_TL, { config: globalThis.config, dom: domStr });\n                return [3 /*break*/, 4];\n            case 3:\n                e_3 = _a.sent();\n                electron_log_1.default.error(JSON.stringify(e_3));\n                globalThis.electron.translateWindow.webContents.send(const_1.electronEvent.SHOW_COMMENT_TL, { config: globalThis.config, dom: '<div>翻訳でエラー</div>' });\n                return [3 /*break*/, 4];\n            case 4: return [2 /*return*/];\n        }\n    });\n}); };\nelectron_1.ipcMain.on(const_1.electronEvent.PREVIEW_IMAGE, function (event, url) {\n    globalThis.electron.imagePreviewWindow.webContents.send(const_1.electronEvent.PREVIEW_IMAGE, url);\n    globalThis.electron.imagePreviewWindow.show();\n});\nexports.default = {};\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isNihongo = exports.judgeAaMessage = exports.unescapeHtml = exports.escapeHtml = exports.sleep = exports.readWavFiles = void 0;\nvar fs_1 = __importDefault(require(\"fs\"));\nvar readWavFiles = function (path) {\n    return new Promise(function (resolve, reject) {\n        fs_1.default.readdir(path, function (err, files) {\n            if (err)\n                reject(err);\n            var fileList = files.filter(function (file) {\n                return isExistFile(path + '/' + file) && /.*\\.wav$/.test(file); //絞り込み\n            });\n            resolve(fileList);\n        });\n    });\n};\nexports.readWavFiles = readWavFiles;\nvar isExistFile = function (file) {\n    try {\n        fs_1.default.statSync(file).isFile();\n        return true;\n    }\n    catch (err) {\n        if (err.code === 'ENOENT')\n            return false;\n    }\n};\nvar sleep = function (msec) { return new Promise(function (resolve) { return setTimeout(resolve, msec); }); };\nexports.sleep = sleep;\nvar escapeHtml = function (string) {\n    if (typeof string !== 'string') {\n        return string;\n    }\n    return string.replace(/[&'`\"<>]/g, function (match) {\n        return {\n            '&': '&amp;',\n            \"'\": '&#x27;',\n            '`': '&#x60;',\n            '\"': '&quot;',\n            '<': '&lt;',\n            '>': '&gt;',\n        }[match];\n    });\n};\nexports.escapeHtml = escapeHtml;\nvar unescapeHtml = function (str) {\n    return str\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&quot;/g, '\"')\n        .replace(/&#x27;/g, \"'\")\n        .replace(/&#x60;/g, '`')\n        .replace(/&#044;/g, ',')\n        .replace(/&amp;/g, '&');\n};\nexports.unescapeHtml = unescapeHtml;\nvar judgeAaMessage = function (messageList) {\n    return messageList.map(function (message) {\n        var isAA = false;\n        if (config.aamode.condition.length <= message.text.length)\n            isAA = true;\n        for (var _i = 0, _a = config.aamode.condition.words; _i < _a.length; _i++) {\n            var word = _a[_i];\n            if (message.text.includes(word))\n                isAA = true;\n        }\n        return __assign(__assign({}, message), { isAA: isAA });\n    });\n};\nexports.judgeAaMessage = judgeAaMessage;\n/** 日本語のテキストか */\nvar isNihongo = function (message) {\n    var reg = new RegExp('.*[ぁ-んァ-ヶ亜-熙ａ-ｚＡ-Ｚ]+.*');\n    return reg.test(message);\n};\nexports.isNihongo = isNihongo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LiveChat = void 0;\nvar live_chat_1 = require(\"./live-chat\");\nObject.defineProperty(exports, \"LiveChat\", { enumerable: true, get: function () { return live_chat_1.LiveChat; } });\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LiveChat = void 0;\nvar events_1 = require(\"events\");\nvar axios_1 = __importDefault(require(\"axios\"));\nvar parser_1 = require(\"./parser\");\nvar util_1 = require(\"../util\");\nvar electron_log_1 = __importDefault(require(\"electron-log\"));\nvar log = electron_log_1.default.scope('Youtube-chat');\n/**\n * YouTubeライブチャット取得イベント\n */\nvar LiveChat = /** @class */ (function (_super) {\n    __extends(LiveChat, _super);\n    function LiveChat(options, interval) {\n        if (interval === void 0) { interval = 5000; }\n        var _this = _super.call(this) || this;\n        _this.interval = interval;\n        /** コメントAPIKey */\n        _this.commentApiKey = '';\n        /** 自分の取得位置を表すID */\n        _this.continuation = '';\n        /** 表示済みのコメントID */\n        _this.displayedId = {};\n        _this.isFirst = true;\n        /** 停止要求をされた */\n        _this.isStop = false;\n        if ('channelId' in options) {\n            _this.channelId = options.channelId;\n        }\n        else if ('liveId' in options) {\n            _this.liveId = options.liveId;\n        }\n        else {\n            throw TypeError('Required channelId or liveId.');\n        }\n        return _this;\n    }\n    LiveChat.prototype.start = function () {\n        this.isFirst = true;\n        this.isStop = false;\n        this.commentApiKey = '';\n        this.continuation = '';\n        this.fetchLiveId();\n    };\n    LiveChat.prototype.fetchLiveId = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var url, liveRes, e_1, init, e_2;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (this.isStop)\n                            return [2 /*return*/];\n                        if (!this.channelId) return [3 /*break*/, 6];\n                        url = \"https://www.youtube.com/channel/\" + this.channelId + \"/live\";\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 5, , 6]);\n                        return [4 /*yield*/, axios_1.default.get(url, { headers: LiveChat.headers })];\n                    case 2:\n                        liveRes = _b.sent();\n                        if (!!liveRes.data.match(/liveChatHeaderRenderer/)) return [3 /*break*/, 4];\n                        // 配信が開始してないパターンが考えられるのでリトライ\n                        this.emit('error', new Error('Live stream not found'));\n                        return [4 /*yield*/, util_1.sleep(2000)];\n                    case 3:\n                        _b.sent();\n                        this.fetchLiveId();\n                        return [2 /*return*/];\n                    case 4:\n                        this.liveId = (_a = liveRes.data.match(/videoId\":\"(.+?)\"/)) === null || _a === void 0 ? void 0 : _a[1];\n                        return [3 /*break*/, 6];\n                    case 5:\n                        e_1 = _b.sent();\n                        // チャンネルID自体が違うのはもうどうしようもないので止める\n                        this.emit('error', new Error(\"connection error url = \" + url));\n                        return [2 /*return*/];\n                    case 6:\n                        if (!this.liveId) return [3 /*break*/, 15];\n                        _b.label = 7;\n                    case 7:\n                        _b.trys.push([7, 12, , 14]);\n                        return [4 /*yield*/, this.getInitParam()];\n                    case 8:\n                        init = _b.sent();\n                        if (!(init.api && init.continuation)) return [3 /*break*/, 9];\n                        this.commentApiKey = init.api;\n                        this.continuation = init.continuation;\n                        this.observer = setInterval(function () { return _this.fetchChat(); }, this.interval);\n                        this.emit('start', this.liveId);\n                        return [3 /*break*/, 11];\n                    case 9:\n                        // 配信ページはあるのに何らかの理由でAPIKeyが取れなかった\n                        this.emit('error', new Error(\"failed fetch apikey liveId=\" + this.liveId));\n                        return [4 /*yield*/, util_1.sleep(2000)];\n                    case 10:\n                        _b.sent();\n                        this.fetchLiveId();\n                        _b.label = 11;\n                    case 11: return [3 /*break*/, 14];\n                    case 12:\n                        e_2 = _b.sent();\n                        // 考えられるのは、LiveIdを指定していて、ページが取れたが、isLiveNowがfalseだった時\n                        this.emit('error', new Error(e_2.message));\n                        return [4 /*yield*/, util_1.sleep(2000)];\n                    case 13:\n                        _b.sent();\n                        this.fetchLiveId();\n                        return [3 /*break*/, 14];\n                    case 14: return [3 /*break*/, 17];\n                    case 15:\n                        // 配信が開始してないパターンが考えられるのでリトライ\n                        this.emit('error', new Error('Live stream not found'));\n                        return [4 /*yield*/, util_1.sleep(2000)];\n                    case 16:\n                        _b.sent();\n                        this.fetchLiveId();\n                        _b.label = 17;\n                    case 17: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    LiveChat.prototype.stop = function (reason) {\n        this.isStop = true;\n        if (this.observer) {\n            clearInterval(this.observer);\n            this.emit('end', reason);\n        }\n        this.displayedId = {};\n    };\n    LiveChat.prototype.getInitParam = function () {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function () {\n            var url, res, isLiveNow, key, continuation;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        url = \"https://www.youtube.com/watch?v=\" + this.liveId;\n                        return [4 /*yield*/, axios_1.default.get(url)];\n                    case 1:\n                        res = _d.sent();\n                        try {\n                            // 配信中か確認。配信中でなければエラーとみなす\n                            isLiveNow = (_a = res.data\n                                .match(/isLiveNow\":.*?,/)) === null || _a === void 0 ? void 0 : _a[0].split(':')[1].replace(/\"/g, '').replace(/,/g, '');\n                            log.debug(isLiveNow);\n                        }\n                        catch (e) {\n                            log.error(e.message);\n                            return [2 /*return*/, { api: '', continuation: '' }];\n                        }\n                        if (isLiveNow === 'false')\n                            throw new Error(\"liveId = \" + this.liveId + \" is not Live Now\");\n                        try {\n                            key = (_b = res.data\n                                .match(/innertubeApiKey\":\".*?\"/)) === null || _b === void 0 ? void 0 : _b[0].split(':')[1].replace(/\"/g, '');\n                            log.debug(\"key is \" + key);\n                            continuation = (_c = res.data\n                                .match(/continuation\":\".*?\"/)) === null || _c === void 0 ? void 0 : _c[0].split(':')[1].replace(/\"/g, '');\n                            log.debug(\"initial continuation is \" + continuation);\n                            return [2 /*return*/, { api: key, continuation: continuation }];\n                        }\n                        catch (e) {\n                            log.error(e.message);\n                            return [2 /*return*/, { api: '', continuation: '' }];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    LiveChat.prototype.fetchChat = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var url, res, reqBody, con, temp, items, e_3;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        url = \"https://www.youtube.com/youtubei/v1/live_chat/get_live_chat?key=\" + this.commentApiKey;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        reqBody = {\n                            context: {\n                                client: {\n                                    clientName: 'WEB',\n                                    clientVersion: '2.20210126.08.02',\n                                    timeZone: 'Asia/Tokyo',\n                                    utcOffsetMinutes: 540,\n                                    mainAppWebInfo: {\n                                        graftUrl: \"https://www.youtube.com/live_chat?continuation=\",\n                                    },\n                                },\n                                request: {\n                                    useSsl: true,\n                                },\n                            },\n                            continuation: this.continuation,\n                        };\n                        log.debug(\"POST \" + url);\n                        return [4 /*yield*/, axios_1.default\n                                .post(url, JSON.stringify(reqBody), { headers: LiveChat.headers })\n                                .then(function (data) {\n                                return data;\n                            })\n                                .catch(function (err) {\n                                throw new Error(err.message);\n                            })];\n                    case 2:\n                        res = _b.sent();\n                        con = parser_1.getContinuation(res.data);\n                        if (!con)\n                            throw new Error('getContinuation error');\n                        log.debug(\"next continuation is \" + con);\n                        this.continuation = con;\n                        temp = (_a = res.data.continuationContents.liveChatContinuation.actions) !== null && _a !== void 0 ? _a : [];\n                        if (temp.length === 0)\n                            return [2 /*return*/];\n                        if (this.isFirst) {\n                            // 初回のみ、actions配列の末尾は入室メッセージみたいなやつなので除外する\n                            temp = temp.slice(0, -1);\n                        }\n                        temp = temp.filter(function (v) {\n                            var messageRenderer = parser_1.actionToRenderer(v);\n                            return messageRenderer !== null && messageRenderer;\n                        });\n                        items = temp.map(function (v) { return parser_1.parseData(v); });\n                        // 初回取得の場合は初期データとして出力\n                        items.forEach(function (v) {\n                            if (v) {\n                                if (_this.isFirst) {\n                                    _this.emit('firstComment', v);\n                                }\n                                else {\n                                    // 表示済みならスキップ\n                                    if (!_this.displayedId[v.id]) {\n                                        _this.emit('comment', v);\n                                    }\n                                }\n                            }\n                        });\n                        this.isFirst = false;\n                        // 末尾のidを取得\n                        log.info(\"items = \" + items.length);\n                        items.forEach(function (v) {\n                            var id = v === null || v === void 0 ? void 0 : v.id;\n                            if (id)\n                                _this.displayedId[id] = true;\n                        });\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_3 = _b.sent();\n                        log.error(e_3);\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        if (res) {\n                            log.error(JSON.stringify(res.data));\n                        }\n                        this.emit('error', new Error(\"Error occured at fetchchat url=\" + url));\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    LiveChat.prototype.on = function (event, listener) {\n        return _super.prototype.on.call(this, event, listener);\n    };\n    LiveChat.headers = {\n        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36',\n        'Content-Type': 'application/json',\n    };\n    return LiveChat;\n}(events_1.EventEmitter));\nexports.LiveChat = LiveChat;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getContinuation = exports.parseData = exports.usecToTime = exports.actionToRenderer = void 0;\nvar electron_log_1 = __importDefault(require(\"electron-log\"));\nvar log = electron_log_1.default.scope('Youtube-chat');\nvar parseThumbnailToImageItem = function (data, alt) {\n    var thumbnail = data.pop();\n    if (thumbnail) {\n        return {\n            url: thumbnail.url,\n            width: thumbnail.width,\n            height: thumbnail.height,\n            alt: alt,\n        };\n    }\n    return;\n};\nvar parseEmojiToImageItem = function (data) {\n    return parseThumbnailToImageItem(data.emoji.image.thumbnails, data.emoji.shortcuts.shift());\n};\nvar parseMessages = function (runs) {\n    return runs.map(function (run) {\n        var _a;\n        if ('text' in run) {\n            if ((_a = run === null || run === void 0 ? void 0 : run.navigationEndpoint) === null || _a === void 0 ? void 0 : _a.urlEndpoint.url) {\n                var tubeUrl = run.navigationEndpoint.urlEndpoint.url.replace(/^\\/redirect\\?/, '');\n                var parsed = tubeUrl.split('&').filter(function (str) { return str.match(/^q=/); });\n                var orgUrl = decodeURIComponent(parsed[0].replace(/^q=/, ''));\n                return { text: orgUrl };\n            }\n            else {\n                return run;\n            }\n        }\n        else {\n            // 絵文字を画像に置換\n            return parseEmojiToImageItem(run);\n        }\n    });\n};\nvar actionToRenderer = function (action) {\n    if (!action.addChatItemAction) {\n        return null;\n    }\n    var item = action.addChatItemAction.item;\n    if (item.liveChatTextMessageRenderer) {\n        return item.liveChatTextMessageRenderer;\n    }\n    else if (item.liveChatPaidMessageRenderer) {\n        return item.liveChatPaidMessageRenderer;\n    }\n    else if (item.liveChatPaidStickerRenderer) {\n        return item.liveChatPaidStickerRenderer;\n    }\n    else {\n        return item.liveChatMembershipItemRenderer;\n    }\n};\nexports.actionToRenderer = actionToRenderer;\nvar usecToTime = function (usec) {\n    return Math.floor(Number(usec) / 1000);\n};\nexports.usecToTime = usecToTime;\nvar parseData = function (data) {\n    var messageRenderer = exports.actionToRenderer(data);\n    if (messageRenderer === null) {\n        return null;\n    }\n    var message = [];\n    if ('message' in messageRenderer) {\n        message = messageRenderer.message.runs;\n    }\n    else if ('headerSubtext' in messageRenderer) {\n        message = messageRenderer.headerSubtext.runs;\n    }\n    var ret = {\n        id: messageRenderer.id,\n        author: {\n            name: messageRenderer.authorName.simpleText,\n            thumbnail: parseThumbnailToImageItem(messageRenderer.authorPhoto.thumbnails, messageRenderer.authorName.simpleText),\n            channelId: messageRenderer.authorExternalChannelId,\n        },\n        message: parseMessages(message),\n        membership: Boolean('headerSubtext' in messageRenderer),\n        isOwner: false,\n        timestamp: exports.usecToTime(messageRenderer.timestampUsec),\n    };\n    if (messageRenderer.authorBadges) {\n        var badge = messageRenderer.authorBadges[0].liveChatAuthorBadgeRenderer;\n        if (badge.customThumbnail) {\n            ret.author.badge = {\n                thumbnail: parseThumbnailToImageItem(badge.customThumbnail.thumbnails, badge.tooltip),\n                label: badge.tooltip,\n            };\n        }\n        else {\n            ret.isOwner = true;\n        }\n    }\n    if ('sticker' in messageRenderer) {\n        ret.superchat = {\n            amount: messageRenderer.purchaseAmountText.simpleText,\n            color: messageRenderer.backgroundColor,\n            sticker: parseThumbnailToImageItem(messageRenderer.sticker.thumbnails, messageRenderer.sticker.accessibility.accessibilityData.label),\n        };\n    }\n    else if ('purchaseAmountText' in messageRenderer) {\n        ret.superchat = {\n            amount: messageRenderer.purchaseAmountText.simpleText,\n            color: messageRenderer.bodyBackgroundColor,\n        };\n    }\n    return ret;\n};\nexports.parseData = parseData;\nvar getContinuation = function (body) {\n    var _a, _b, _c, _d;\n    var continuation = '';\n    try {\n        continuation = (_b = (_a = body.continuationContents.liveChatContinuation.continuations[0].invalidationContinuationData) === null || _a === void 0 ? void 0 : _a.continuation) !== null && _b !== void 0 ? _b : '';\n    }\n    catch (e) {\n        // なんかまた知らないパターンが来た時用\n        log.warn(e);\n    }\n    if (continuation)\n        return continuation;\n    try {\n        continuation = (_d = (_c = body.continuationContents.liveChatContinuation.continuations[0].timedContinuationData) === null || _c === void 0 ? void 0 : _c.continuation) !== null && _d !== void 0 ? _d : '';\n    }\n    catch (e) {\n        //\n        log.warn(e);\n    }\n    if (continuation)\n        return continuation;\n    // なんやかんやしても見つからなかった\n    if (!continuation)\n        throw new Error('continuation not found!');\n};\nexports.getContinuation = getContinuation;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACppxhvnpiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzzsourceRoot":""}